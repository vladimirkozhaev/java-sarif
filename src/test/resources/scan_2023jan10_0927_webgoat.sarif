{
  "version": "2.1.0",
  "$schema": "https://docs.oasis-open.org/sarif/sarif/v2.1.0/cos02/schemas/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "informationUri": "https://www.mend.io/sast/",
          "name": "mend.sast.engineJava",
          "rules": [
            {
              "id": "java-cmd-inj",
              "name": "JavaCommandInjection",
              "shortDescription": {
                "text": "Command Injection vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/78.html",
              "help": {
                "text": "Command Injection vulnerability occurs when an application passes unsafe data supplied by the user (forms, cookies, HTTP headers etc.) to a system shell. In this attack operating system commands supplied by the attacker are usually executed with the privileges of the vulnerable application. Successful shell command execution attack can result in arbitrary command execution and a full system compromise\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Blacklisting forbidden character sequences\n- Whitelisting allowed character sequences\n- Restricting permissions on operating system commands\n- Filtering out command directory names\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-sqli",
              "name": "JavaSqlInjection",
              "shortDescription": {
                "text": "SQL Injection vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/89.html",
              "help": {
                "text": "SQL Injection vulnerability occurs when a user input is used in the construction of an SQL query without proper user input string neutralization (sanitization). A successful SQL injection exploit can read sensitive data from the database, modify database data (Insert/Update/Delete), execute administration operations on the database (such as shutdown of the DBMS), recover the content of a given file present on the DBMS file system or in some cases issue commands to the operating system\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Using prepared statements (with parameterized queries)\n- Correct filtering (escaping) of string literal escape characters in SQL statements, like single quote ('), double quote (\"), backslash (\\) and the NULL byte\n- Checking parameters for valid representation for the give type (integer, float or boolean)\n- Correct database permissions on logon, which restricts web application or user access to unnecessary data\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-xpath-inj",
              "name": "JavaXpathInjection",
              "shortDescription": {
                "text": "XPath Injection vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/643.html",
              "help": {
                "text": "XPath Injection vulnerability occurs when an application uses external input to construct dynamically an XPath expression used to retrieve data from an XML database, but it either does not neutralize (sanitize) or it incorrectly neutralizes that input. This allows an attacker to control the structure of the query. By sending intentionally malformed information to the web site, an attacker can find out how the XML data is structured, or access data that he may not normally have access to.\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Escape single and double quotes characters\n- Use precompiled XPath\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-server-exec",
              "name": "JavaServerPagesExecution",
              "shortDescription": {
                "text": "Server Pages Execution vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/94.html",
              "help": {
                "text": "Server Pages Execution vulnerability occurs when the user input is used in include page tags or file uploads. Successful Page Execution attack can result in arbitrary code execution, shell command execution, and sensitive file disclosure\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Use a blacklist for file extensions (this is less safe because it is possible to bypass this protection using some extensions which are executable on the server but are not mentioned in the list)\n- Use a whitelist for file extensions.\u003cbr\u003eUse \"Content-Type\" from the request HTML header - some web applications use this parameter to recognize a file as a good one\n- Use file type recognizers (functions or APIs that check the file type).\u003cbr\u003eAccept only alphanumeric characters and escape others\n- Limit the file size and filename length. Also, restrict small size files.\u003cbr\u003eUpload directory should not have any \"execute\" permission\n- Prevent file overwriting by checking file hashes\n- Use a virus scanner on the server (if applicable)\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-code-inj",
              "name": "JavaCodeInjection",
              "shortDescription": {
                "text": "Code Injection vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/94.html",
              "help": {
                "text": "The application constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment. When the application allows a user's input to contain code syntax, it might be possible for an attacker to craft the code in such a way that it will alter the intended control flow of the application. Such an alteration could lead to arbitrary code execution\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Rejecting any input that does not strictly conform to specifications, or transforming it into something that does\n- When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules\n- To reduce the likelihood of code injection, stringent whitelists that limit which constructs are allowed should be used. If the code that invokes a function is dynamically constructed, then verifying that the input is alphanumeric might be insufficient\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-path-traversal",
              "name": "JavaPathDirectoryTraversal",
              "shortDescription": {
                "text": "Path/Directory Traversal vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/22.html",
              "help": {
                "text": "Path/Directory Traversal or file disclosure vulnerability occurs when an external input is used to construct a pathname that is intended to identify a file or a directory located underneath a restricted parent directory. The application does not properly neutralize (sanitize) special elements within the pathname, which can cause the pathname to resolve to a location that is outside of the restricted directory. Successful file disclosure attack can result in sensitive files disclosure, and can often lead to full system compromise\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Using a whitelist of directories from which files are allowed for download and validating requests based on that list\n- Indexing files which are allowed for download and passing only their index numbers as the URL parameter values\n- Validating requested file types\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-file-manipulation",
              "name": "JavaFileManipulation",
              "shortDescription": {
                "text": "File Manipulation vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/73.html",
              "help": {
                "text": "File Manipulation vulnerability occurs when an application allows user input to control or influence paths or file names that are used in file system operations. This could allow an attacker to access or modify system files or other files that are critical to the application. For example, an application may give an attacker the ability to overwrite a specified file or run with a configuration controlled by the attacker\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Escaping special characters from user input\n- Validating file types requested by users\n- Indexing files that are allowed for access and passing only their index numbers as the URL parameter values\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-xss",
              "name": "JavaCrossSiteScripting",
              "shortDescription": {
                "text": "Cross-Site Scripting vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/79.html",
              "help": {
                "text": "Cross Site Scripting (XSS) vulnerability occurs when an application either does not perform or it performs incorrect neutralization (sanitization) of input data that is included in a web application response. As the result, an attacker is able to inject and execute arbitrary HTML and script code in a user's browser within the context of the vulnerable website. These attacks are often used to steal authentication credentials (e.g. session IDs in cookies). Depending on the vulnerability and the web application, it is also possible to completely alter the web page itself or control the victim's browser\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Escape HTML before inserting untrusted data into element content\n- Escape attribute before inserting untrusted data into HTML common attributes\n- Escape JavaScript before inserting untrusted data into JavaScript data values\n- Escape CSS and strictly validate before inserting untrusted data into HTML style property values\n- Escape URL before inserting untrusted data into HTML URL parameter values\n- Use HTML policy engine to validate or clean user-driven HTML in an outbound way\n- Use HTTPOnly cookie flag\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-insecure-ds",
              "name": "JavaDeserializationOfUntrustedData",
              "shortDescription": {
                "text": "Deserialization of Untrusted Data vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/502.html",
              "help": {
                "text": "The application deserializes untrusted data without sufficiently verifying that the resulting data will be valid. When developers place no restrictions on \"gadget chains,\" or series of instances and method invocations that can self-execute during the deserialization process (i.e., before the object is returned to the caller), it is sometimes possible for attackers to leverage them to perform unauthorized actions, like code execution\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- If available, use the signing/sealing features of the programming language to assure that deserialized data has not been tainted. For example, a hash-based message authentication code (HMAC) could be used to ensure that data has not been modified\n- When deserializing data, populate a new object rather than just deserializing. The result is that the data flows through safe input validation and that the functions are safe\n- Explicitly define a final object() to prevent deserialization\n- Avoid having unnecessary types or gadgets available that can be leveraged for malicious ends. This limits the potential for unintended or unauthorized types and gadgets to be leveraged by the attacker. Whitelist acceptable classes. Note: new gadgets are constantly being discovered, so this alone is not a sufficient mitigation\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-ssrf",
              "name": "JavaServerSideRequestForgery",
              "shortDescription": {
                "text": "Server Side Request Forgery vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/918.html",
              "help": {
                "text": "Server Side Request Forgery occures when the web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination. By providing URLs to unexpected hosts or ports, attackers can make it appear that the server is sending the request, possibly bypassing access controls such as firewalls that prevent the attackers from accessing the URLs directly. The server can be used as a proxy to conduct port scanning of hosts in internal networks, use other URLs such as that can access documents on the system (using file://), or use other protocols such as gopher:// or tftp://, which may provide greater control over the contents of requests\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Use a whitelist of allowed domains and protocols from where the web server can fetch remote resources\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-hardcoded-creds",
              "name": "JavaHardcodedPasswordCredentials",
              "shortDescription": {
                "text": "Hardcoded Password/Credentials vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/798.html",
              "help": {
                "text": "The application contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Store passwords, keys, and other credentials outside of the code in a strongly-protected, encrypted configuration file or database that is protected from access by all outsiders, including other local users on the same system. Properly protect the key. If you cannot use encryption to protect the file, then make sure that the permissions are as restrictive as possible\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-xxe",
              "name": "JavaXmlExternalEntityXxeInjection",
              "shortDescription": {
                "text": "XML External Entity (XXE) Injection vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/611.html",
              "help": {
                "text": "The application processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the application to embed incorrect documents into its output. XML documents optionally contain a Document Type Definition (DTD), which, among other features, enables the definition of XML entities. It is possible to define an entity by providing a substitution string in the form of a URI. The XML parser can access the contents of this URI and embed these contents back into the XML document for further processing\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Many XML parsers and validators can be configured to disable external entity expansion\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-weak-rnd",
              "name": "JavaWeakPseudoRandom",
              "shortDescription": {
                "text": "Weak Pseudo-Random vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/338.html",
              "help": {
                "text": "When a non-cryptographic PRNG is used in a cryptographic context, it can expose the cryptography to certain types of attacks. Often a pseudo-random number generator (PRNG) is not designed for cryptography. Sometimes a mediocre source of randomness is sufficient or preferable for algorithms that use random numbers. Weak generators generally take less processing power and/or do not use the precious, finite, entropy sources on a system. While such PRNGs might have very useful features, these same features could be used to break the cryptography\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Use functions or hardware which use a hardware-based random number generation for all crypto\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-ldap-inj",
              "name": "JavaLdapInjection",
              "shortDescription": {
                "text": "LDAP Injection vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/90.html",
              "help": {
                "text": "LDAP injection vulnerability occurs when an application constructs all or a part of an LDAP query using a user input, but it either does not neutralize (sanitize) or it incorrectly neutralizes special elements that could modify the intended LDAP query. Successful LDAP injection attack can result in the execution of arbitrary commands such as granting permissions to unauthorized queries and content modification inside the LDAP tree\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Type validation (example: int userinput = Convert.ToInt32(Request.Querystring(\"userinput\"))\n- Pattern validation (example: string email = Regex.IsMatch(Request.Querystring(\"email\"),\"^.+@[^\\.].*\\.[a-z]{2,}$\"))\n- Domain values validation (example: string country = Request.Querystring(???country???) in {???USA???, ???UK???})\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-insecure-transport",
              "name": "JavaInsufficientTransportLayerProtection",
              "shortDescription": {
                "text": "Insufficient Transport Layer Protection vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/319.html",
              "help": {
                "text": "Insufficient Transport Layer Protection occurs when sensitive data is transmitted over the plain-text networking protocol\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Send sensitive information over the encrypted network protocols\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-heap-inspect",
              "name": "JavaHeapInspection",
              "shortDescription": {
                "text": "Heap Inspection vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/244.html",
              "help": {
                "text": "When sensitive data such as a password or an encryption key is not removed from memory, it could be exposed to an attacker using a \"heap inspection\" attack that reads the sensitive data using memory dumps or other methods. Sensitive data (such as passwords, social security numbers, credit card numbers etc) stored in memory can be leaked if memory is not cleared after use\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Scrub the sensitive data from memory\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-trust-boundary",
              "name": "JavaTrustBoundaryViolation",
              "shortDescription": {
                "text": "Trust Boundary Violation vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/501.html",
              "help": {
                "text": "The application mixes trusted and untrusted data in the same data structure or structured message. A trust boundary can be thought of as line drawn through a program. On one side of the line, data is untrusted. On the other side of the line, data is assumed to be trustworthy. The purpose of validation logic is to allow data to safely cross the trust boundary - to move from untrusted to trusted. A trust boundary violation occurs when a program blurs the line between what is trusted and what is untrusted. By combining trusted and untrusted data in the same data structure, it becomes easier for programmers to mistakenly trust unvalidated data\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Proper input validation and output encoding should be used on data before moving it into trusted boundaries\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-misc",
              "name": "JavaMiscellaneousDangerousFunctions",
              "shortDescription": {
                "text": "Miscellaneous Dangerous Functions vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/676.html",
              "help": {
                "text": "Miscellaneous dangerous functions are functions that could introduce a vulnerability of an unpredictable security impact if they are used incorrectly. Functions like LoadLibrary or printStackTrace could result in arbitrary code execution or information disclosure\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Avoid use of potentially dangerous or depreciated functions\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-console",
              "name": "JavaConsoleOutput",
              "shortDescription": {
                "text": "Console Output vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/209.html",
              "help": {
                "text": "Including console output in production code, particularly in code that runs client-side, risks inadvertently exposing sensitive information\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Remove any debug and similar statements that use console output in production code\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-err-msg",
              "name": "JavaErrorMessagesInformationExposure",
              "shortDescription": {
                "text": "Error Messages Information Exposure vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/209.html",
              "help": {
                "text": "The application generates an error message that includes sensitive information about its environment, users, or associated data. The sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more deadly attacks. If an attack fails, an attacker may use error information provided by the server to launch another more focused attack. For example, an attempt to exploit a path traversal weakness might yield the full pathname of the installed application. In turn, this could be used to select the proper number of \"..\" sequences to navigate to the targeted file. An attack using SQL injection might not initially succeed, but an error message could reveal the malformed query, which would expose query logic and possibly even passwords or other sensitive information used within the query\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Ensure that error messages only contain minimal details that are useful to the intended audience, and nobody else. The messages need to strike the balance between being too cryptic and not being cryptic enough. They should not necessarily reveal the methods that were used to determine the error. Such detailed information can be used to refine the original attack to increase the chances of success\n- If errors must be tracked in some detail, capture them in log messages - but consider what could occur if the log messages can be viewed by attackers. Avoid recording highly sensitive information such as passwords in any form. Avoid inconsistent messaging that might accidentally tip off an attacker about internal state, such as whether a username is valid or not\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-log",
              "name": "JavaLogMessagesInformationLeak",
              "shortDescription": {
                "text": "Log Messages Information Leak vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/209.html",
              "help": {
                "text": "The application contains debugging code that can expose sensitive information to untrusted parties.\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- If errors must be tracked in some detail, capture them in log messages - but consider what could occur if the log messages can be viewed by attackers. Avoid recording highly sensitive information such as passwords in any form. Avoid inconsistent messaging that might accidentally tip off an attacker about internal state, such as whether a username is valid or not\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-hidden-html",
              "name": "JavaHiddenHtmlInput",
              "shortDescription": {
                "text": "Hidden HTML Input vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/472.html",
              "help": {
                "text": "Hidden form inputs are often written into an HTML page by the web server when it serves that page to the client, and are not visible on the rendered web page. Because HTTP is essentially stateless, like cookies, hidden form inputs are one way that web applications can use to remember session data from one page request to the next. Because of poor coding practices, hidden fields often contain confidential information (such as product prices on an e-commerce site) that should be stored only in a back-end database\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Sensitive information that may affect the application logic should be stored only in a back-end database\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-regex-dos",
              "name": "JavaRegexDenialOfServiceRedos",
              "shortDescription": {
                "text": "Regex Denial of Service (ReDoS) vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/400.html",
              "help": {
                "text": "Regular expression Denial of Service (ReDoS) is a Denial of Service attack, that exploits the fact that most Regular Expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). An attacker can then cause a program using a Regular Expression to enter these extreme situations and then hang for a very long time, affecting the availability of the application\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Do not pass untrusted user input to functions that perform regular expression searches\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-sleep-dos",
              "name": "JavaSleepDenialOfService",
              "shortDescription": {
                "text": "Sleep Denial of Service vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/400.html",
              "help": {
                "text": "Sleep Denial of Service is a Denial of Service attack, that exploits code flows where the application passes user-controlled input to Sleep functions (such as in loops). An attacker can then cause a program to hang for a very long time and affect the availability\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Do not pass untrusted user input to functions that perform sleep or thread pauses\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-file-upload",
              "name": "JavaFileUpload",
              "shortDescription": {
                "text": "File Upload vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/434.html",
              "help": {
                "text": "The consequences of unrestricted file upload can vary, including complete system takeover, an overloaded file system or database, forwarding attacks to back-end systems, client-side attacks, or simple defacement. It depends on what the application does with the uploaded file and especially where it is stored\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- The file types allowed to be uploaded should be restricted to only those that are necessary for business functionality\n- Never accept a filename and its extension directly without having a whitelist filter\n- The application should perform filtering and content checking on any files which are uploaded to the server. Files should be thoroughly scanned and validated before being made available to other users. If in doubt, the file should be discarded\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-weak-enc",
              "name": "JavaWeakEncryptionStrength",
              "shortDescription": {
                "text": "Weak Encryption Strength vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/326.html",
              "help": {
                "text": "A weak encryption scheme can be subjected to brute force attacks that have a reasonable chance of succeeding using current attack methods and resources. The use of a broken or risky cryptographic algorithm is an unnecessary risk that may result in the exposure of sensitive information. The use of a non-standard algorithm is dangerous because a determined attacker may be able to break the algorithm and compromise whatever data has been protected. Well-known techniques may exist to break the algorithm\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- When there is a need to store or transmit sensitive data, use strong, up-to-date cryptographic algorithms to encrypt that data. Select a well-vetted algorithm that is currently considered to be strong by experts in the field, and use well-tested implementations\n- Periodically ensure that the cryptography has not become obsolete. Some older algorithms, once thought to require a billion years of computing time, can now be broken in days or hours. This includes MD4, MD5, SHA1, DES, and other algorithms that were once regarded as strong\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-dangerous-ext",
              "name": "JavaDangerousFileExtensions",
              "shortDescription": {
                "text": "Dangerous File Extensions vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/530.html",
              "help": {
                "text": "Dangerous file extensions are files that are part of a web application and which could be incorrectly handled by the web server due to their file extension. When requested directly within a URL, these files could reveal web application source code, or some other sensitive information that could help the attacker in compromising a web application or a database\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Removing all old or backup files from webroot directory\n- Renaming sensitive application files that the web server could handle in an unintended way\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-redirect",
              "name": "JavaUnvalidatedOpenRedirect",
              "shortDescription": {
                "text": "Unvalidated/Open Redirect vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/601.html",
              "help": {
                "text": "Open Redirect vulnerability occurs when untrusted user input is passed to HTTP location redirect functions or properties. By modifying untrusted URL input to a malicious site, an attacker may successfully launch a phishing scam and steal user credentials. Because the server name in the modified link is identical to the original site, phishing attempts may have a more trustworthy appearance\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Do not pass untrusted user input to location redirection functions or properties\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-log-forge",
              "name": "JavaLogForging",
              "shortDescription": {
                "text": "Log Forging vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/117.html",
              "help": {
                "text": "Log Forging vulnerability occurs when an application either does not neutralize (sanitize) or it incorrectly neutralizes output that is written to logs. This can allow an attacker to forge log entries or inject malicious content into log records\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Validating and encoding all input that could be outputed in the log file\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-weak-hash",
              "name": "JavaWeakHashStrength",
              "shortDescription": {
                "text": "Weak Hash Strength vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/916.html",
              "help": {
                "text": "The application generates a hash but it uses a scheme that does not provide a sufficient level of computational effort that would make cracking attacks infeasible or expensive\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Use an adaptive hash function that can be configured to change the amount of computational effort needed to compute the hash, such as the number of iterations (\"stretching\") or the amount of memory required. Some hash functions perform salting automatically. These functions can significantly increase the overhead for a brute force attack compared to intentionally-fast functions such as MD5\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-header-inj",
              "name": "JavaHttpHeaderInjection",
              "shortDescription": {
                "text": "HTTP Header Injection vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/113.html",
              "help": {
                "text": "HTTP header injection is a general class of web application security vulnerability which occurs when HTTP headers are dynamically generated based on user input. Header injection in HTTP responses can allow for HTTP response splitting, Session fixation via the Set-Cookie header, cross-site scripting (XSS), and malicious redirect attacks via the location header\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Do not pass untrusted user input to functions that affect response header content\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-response-split",
              "name": "JavaHttpResponseSplitting",
              "shortDescription": {
                "text": "HTTP Response Splitting vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/113.html",
              "help": {
                "text": "HTTP Response Splitting vulnerability occurs when a user input that contains CR (carriage return, also represented by %0d or \\r) and LF (line feed, also represented by %0a or \\n) characters is included in the web application HTTP response headers. The failure to remove CRs and LFs allows an attacker to set arbitrary headers, take control of the body, or break the response into two or more separate responses and allow for different types of attacks such as Cross Site Scripting, cross-user defacement, web cache poisoning and similar exploits\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Remove CRs and LFs (and all other hazardous characters) before embedding data into any HTTP response header, particularly when setting cookies and redirecting\n- Use a whitelist of acceptable inputs that strictly conform to specifications\n- When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-cookie-inj",
              "name": "JavaCookieInjection",
              "shortDescription": {
                "text": "Cookie Injection vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/20.html",
              "help": {
                "text": "The application does not validate or incorrectly validates input that can affect the control flow or data flow of a program, or in this specific case application cookies. When the application does not validate input properly, an attacker is able to craft the input in a form that is not expected by the rest of the application. This will lead to parts of the system receiving unintended input, which may result in altered control flow, arbitrary control of a resource, or arbitrary code execution\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-mail-relay",
              "name": "JavaMailRelay",
              "shortDescription": {
                "text": "Mail Relay vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/20.html",
              "help": {
                "text": "Mail relay vulnerability occurs when unfiltered user input is used as an argument to mail message objects. Successful mail relay attack can result in sending arbitrary e-mail messages to recipients who will think that mail is originated from trusted source\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Escape CR and LF character sequences\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-system-properties",
              "name": "JavaSystemPropertiesChange",
              "shortDescription": {
                "text": "System Properties Change vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/20.html",
              "help": {
                "text": "Intentional or unintentional change of configuration from an actor that is not explicitly authorized to have access to that configuration.\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-session-poison",
              "name": "JavaSessionPoisoning",
              "shortDescription": {
                "text": "Session Poisoning vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/20.html",
              "help": {
                "text": "Session poisoning (also referred to as \"session data pollution\" and \"session modification\") is a method to exploit insufficient input validation within a server application. Typically a server application that is vulnerable to this type of exploit will copy user input into session variables. The underlying vulnerability is a state management problem: shared state, race condition, ambiguity in use or plain unprotected modifications of state values\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-system-properties-disc",
              "name": "JavaSystemPropertiesDisclosure",
              "shortDescription": {
                "text": "System Properties Disclosure vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/497.html",
              "help": {
                "text": "An information exposure is the intentional or unintentional disclosure of information to an actor that is not explicitly authorized to have access to that information. An information exposure occurs when system data or debugging information leaves the program through an output stream or logging function that makes it accessible to unauthorized parties. An attacker can also cause errors to occur by submitting unusual requests to the web application. The response to these errors can reveal detailed system information, deny service, cause security mechanisms to fail, and crash the server. An attacker can use error messages that reveal technologies, operating systems, and product versions to tune the attack against known vulnerabilities in these technologies. An application may use diagnostic methods that provide significant implementation details such as stack traces as part of its error handling mechanism.\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Production applications should never use methods that generate internal details such as stack traces and error messages unless that information is directly committed to a log that is not viewable by the end user\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-http-only",
              "name": "JavaCookieWithoutHttponlyFlag",
              "shortDescription": {
                "text": "Cookie Without 'HttpOnly' Flag vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/1004.html",
              "help": {
                "text": "The application uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag. The HttpOnly flag directs compatible browsers to prevent client-side script from accessing cookies. Including the HttpOnly flag in the Set-Cookie HTTP response header helps mitigate the risk associated with Cross-Site Scripting (XSS) where an attacker's script code might attempt to read the contents of a cookie and exfiltrate information obtained. When set, browsers that support the flag will not reveal the contents of the cookie to a third party via client-side script executed via XSS\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Leverage the HttpOnly flag when setting a sensitive cookie in a response\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "java-arb-server-conn",
              "name": "JavaArbitraryServerConnection",
              "shortDescription": {
                "text": "Arbitrary Server Connection vulnerability (Java)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/941.html",
              "help": {
                "text": "Improper use of some service or database access functions could result in arbitrary server / database connection. Arbitrary server / database connection could further result in arbitrary file download, sensitive file disclosure, and in some cases even command execution\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does\n"
              },
              "properties": {
                "precision": "high"
              }
            }
          ],
          "version": "22.12.1.3"
        }
      },
      "invocations": [
        {
          "executionSuccessful": true,
          "startTimeUtc": "2023-01-10T07:28:12.518Z"
        },
        {
          "endTimeUtc": "2023-01-10T07:28:53.928Z",
          "executionSuccessful": true
        }
      ],
      "results": [
        {
          "ruleId": "java-sqli",
          "level": "error",
          "message": {
            "text": "prepareStatement could be abused to perform a SQL Injection attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                },
                "region": {
                  "startLine": 59
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                          },
                          "region": {
                            "startLine": 59
                          }
                        },
                        "message": {
                          "text": "Tainted input \"username_login\" was received in line 59 of the file src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                          },
                          "region": {
                            "startLine": 59
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"connection.prepareStatement\" in line 59 of the file src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java, causing a High risk SQL Injection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-sqli",
          "level": "error",
          "message": {
            "text": "executeQuery method of Statement object could be abused to perform a SQL Injection attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                },
                "region": {
                  "startLine": 65
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                          },
                          "region": {
                            "startLine": 63
                          }
                        },
                        "message": {
                          "text": "Tainted input \"username_reg\" was received in line 63 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                          },
                          "region": {
                            "startLine": 63
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"checkUserQuery\" in line 63 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                          },
                          "region": {
                            "startLine": 65
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"statement.executeQuery\" in line 65 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java, causing a High risk SQL Injection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-sqli",
          "level": "error",
          "message": {
            "text": "executeQuery method of Statement object could be abused to perform a SQL Injection attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                },
                "region": {
                  "startLine": 65
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                          },
                          "region": {
                            "startLine": 52
                          }
                        },
                        "message": {
                          "text": "Tainted input \"userId\" was received in line 52 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                          },
                          "region": {
                            "startLine": 52
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"userId\" in line 52 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                          },
                          "region": {
                            "startLine": 56
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"accountName\" in line 56 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 4,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                          },
                          "region": {
                            "startLine": 60
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"query\" in line 60 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 5,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                          },
                          "region": {
                            "startLine": 65
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"statement.executeQuery\" in line 65 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java, causing a High risk SQL Injection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-sqli",
          "level": "error",
          "message": {
            "text": "executeUpdate method of Statement object could be abused to perform a SQL Injection attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                },
                "region": {
                  "startLine": 65
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                          },
                          "region": {
                            "startLine": 57
                          }
                        },
                        "message": {
                          "text": "Tainted input \"query\" was received in line 57 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                          },
                          "region": {
                            "startLine": 57
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"query\" in line 57 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                          },
                          "region": {
                            "startLine": 60
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"query\" in line 60 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 4,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                          },
                          "region": {
                            "startLine": 65
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"statement.executeUpdate\" in line 65 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java, causing a High risk SQL Injection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-sqli",
          "level": "error",
          "message": {
            "text": "executeUpdate method of Statement object could be abused to perform a SQL Injection attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                },
                "region": {
                  "startLine": 65
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                          },
                          "region": {
                            "startLine": 65
                          }
                        },
                        "message": {
                          "text": "Tainted input \"query\" was received in line 65 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                          },
                          "region": {
                            "startLine": 65
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"statement.executeUpdate\" in line 65 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java, causing a High risk SQL Injection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-sqli",
          "level": "error",
          "message": {
            "text": "executeQuery method of Statement object could be abused to perform a SQL Injection attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                },
                "region": {
                  "startLine": 63
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                          },
                          "region": {
                            "startLine": 53
                          }
                        },
                        "message": {
                          "text": "Tainted input \"action_string\" was received in line 53 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                          },
                          "region": {
                            "startLine": 53
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"action_string\" in line 53 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                          },
                          "region": {
                            "startLine": 56
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"action\" in line 56 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 4,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                          },
                          "region": {
                            "startLine": 58
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"query\" in line 58 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 5,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                          },
                          "region": {
                            "startLine": 63
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"statement.executeQuery\" in line 63 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java, causing a High risk SQL Injection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-sqli",
          "level": "error",
          "message": {
            "text": "executeQuery method of Statement object could be abused to perform a SQL Injection attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                },
                "region": {
                  "startLine": 62
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                          },
                          "region": {
                            "startLine": 56
                          }
                        },
                        "message": {
                          "text": "Tainted input \"query\" was received in line 56 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                          },
                          "region": {
                            "startLine": 56
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"query\" in line 56 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                          },
                          "region": {
                            "startLine": 59
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"query\" in line 59 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 4,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                          },
                          "region": {
                            "startLine": 62
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"statement.executeQuery\" in line 62 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java, causing a High risk SQL Injection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-sqli",
          "level": "error",
          "message": {
            "text": "executeQuery method of Statement object could be abused to perform a SQL Injection attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                },
                "region": {
                  "startLine": 62
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                          },
                          "region": {
                            "startLine": 62
                          }
                        },
                        "message": {
                          "text": "Tainted input \"query\" was received in line 62 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                          },
                          "region": {
                            "startLine": 62
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"statement.executeQuery\" in line 62 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java, causing a High risk SQL Injection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-sqli",
          "level": "error",
          "message": {
            "text": "executeUpdate method of Statement object could be abused to perform a SQL Injection attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java"
                },
                "region": {
                  "startLine": 63
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java"
                          },
                          "region": {
                            "startLine": 57
                          }
                        },
                        "message": {
                          "text": "Tainted input \"query\" was received in line 57 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java"
                          },
                          "region": {
                            "startLine": 57
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"query\" in line 57 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java"
                          },
                          "region": {
                            "startLine": 60
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"query\" in line 60 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 4,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java"
                          },
                          "region": {
                            "startLine": 63
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"statement.executeUpdate\" in line 63 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java, causing a High risk SQL Injection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-sqli",
          "level": "error",
          "message": {
            "text": "executeUpdate method of Statement object could be abused to perform a SQL Injection attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java"
                },
                "region": {
                  "startLine": 63
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java"
                          },
                          "region": {
                            "startLine": 63
                          }
                        },
                        "message": {
                          "text": "Tainted input \"query\" was received in line 63 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java"
                          },
                          "region": {
                            "startLine": 63
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"statement.executeUpdate\" in line 63 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java, causing a High risk SQL Injection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-sqli",
          "level": "error",
          "message": {
            "text": "prepareStatement could be abused to perform a SQL Injection attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                },
                "region": {
                  "startLine": 58
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                          },
                          "region": {
                            "startLine": 52
                          }
                        },
                        "message": {
                          "text": "Tainted input \"userid\" was received in line 52 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                          },
                          "region": {
                            "startLine": 52
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"userid\" in line 52 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                          },
                          "region": {
                            "startLine": 55
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"accountName\" in line 55 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 4,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                          },
                          "region": {
                            "startLine": 56
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"queryString\" in line 56 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 5,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                          },
                          "region": {
                            "startLine": 58
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"connection.prepareStatement\" in line 58 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java, causing a High risk SQL Injection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-sqli",
          "level": "error",
          "message": {
            "text": "prepareStatement could be abused to perform a SQL Injection attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/Servers.java"
                },
                "region": {
                  "startLine": 72
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/Servers.java"
                          },
                          "region": {
                            "startLine": 72
                          }
                        },
                        "message": {
                          "text": "Tainted input \"column\" was received in line 72 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/Servers.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/Servers.java"
                          },
                          "region": {
                            "startLine": 72
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"connection.prepareStatement\" in line 72 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/Servers.java, causing a High risk SQL Injection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-sqli",
          "level": "error",
          "message": {
            "text": "executeQuery method of Statement object could be abused to perform a SQL Injection attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                },
                "region": {
                  "startLine": 66
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 55
                          }
                        },
                        "message": {
                          "text": "Tainted input \"name\" was received in line 55 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 55
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"name\" in line 55 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 58
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"name\" in line 58 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 4,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 60
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"query\" in line 60 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 5,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 66
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"statement.executeQuery\" in line 66 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java, causing a High risk SQL Injection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-sqli",
          "level": "error",
          "message": {
            "text": "executeQuery method of Statement object could be abused to perform a SQL Injection attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                },
                "region": {
                  "startLine": 66
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 55
                          }
                        },
                        "message": {
                          "text": "Tainted input \"auth_tan\" was received in line 55 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 55
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"auth_tan\" in line 55 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 58
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"auth_tan\" in line 58 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 4,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 60
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"query\" in line 60 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 5,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 66
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"statement.executeQuery\" in line 66 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java, causing a High risk SQL Injection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-sqli",
          "level": "error",
          "message": {
            "text": "executeQuery method of Statement object could be abused to perform a SQL Injection attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                },
                "region": {
                  "startLine": 66
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 60
                          }
                        },
                        "message": {
                          "text": "Tainted input \"name\" was received in line 60 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 60
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"query\" in line 60 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 66
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"statement.executeQuery\" in line 66 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java, causing a High risk SQL Injection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-sqli",
          "level": "error",
          "message": {
            "text": "executeQuery method of Statement object could be abused to perform a SQL Injection attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                },
                "region": {
                  "startLine": 66
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 60
                          }
                        },
                        "message": {
                          "text": "Tainted input \"auth_tan\" was received in line 60 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 60
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"query\" in line 60 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 66
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"statement.executeQuery\" in line 66 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java, causing a High risk SQL Injection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-sqli",
          "level": "error",
          "message": {
            "text": "executeQuery method of Statement object could be abused to perform a SQL Injection attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                },
                "region": {
                  "startLine": 62
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 54
                          }
                        },
                        "message": {
                          "text": "Tainted input \"injection\" was received in line 54 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 54
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"injection\" in line 54 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 57
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"accountName\" in line 57 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 4,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 60
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"query\" in line 60 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 5,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 62
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"statement.executeQuery\" in line 62 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java, causing a High risk SQL Injection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-sqli",
          "level": "error",
          "message": {
            "text": "executeQuery method of Statement object could be abused to perform a SQL Injection attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                },
                "region": {
                  "startLine": 62
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 54
                          }
                        },
                        "message": {
                          "text": "Tainted input \"operator\" was received in line 54 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 54
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"operator\" in line 54 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 57
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"accountName\" in line 57 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 4,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 60
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"query\" in line 60 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 5,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 62
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"statement.executeQuery\" in line 62 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java, causing a High risk SQL Injection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-sqli",
          "level": "error",
          "message": {
            "text": "executeQuery method of Statement object could be abused to perform a SQL Injection attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                },
                "region": {
                  "startLine": 62
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 54
                          }
                        },
                        "message": {
                          "text": "Tainted input \"account\" was received in line 54 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 54
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"account\" in line 54 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 57
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"accountName\" in line 57 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 4,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 60
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"query\" in line 60 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 5,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 62
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"statement.executeQuery\" in line 62 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java, causing a High risk SQL Injection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-sqli",
          "level": "error",
          "message": {
            "text": "executeQuery method of Statement object could be abused to perform a SQL Injection attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                },
                "region": {
                  "startLine": 65
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidation.java"
                          },
                          "region": {
                            "startLine": 52
                          }
                        },
                        "message": {
                          "text": "Tainted input \"userId\" was received in line 52 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidation.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidation.java"
                          },
                          "region": {
                            "startLine": 52
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"userId\" in line 52 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidation.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                          },
                          "region": {
                            "startLine": 56
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"accountName\" in line 56 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 4,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                          },
                          "region": {
                            "startLine": 60
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"query\" in line 60 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 5,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                          },
                          "region": {
                            "startLine": 65
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"statement.executeQuery\" in line 65 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java, causing a High risk SQL Injection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-sqli",
          "level": "error",
          "message": {
            "text": "executeQuery method of Statement object could be abused to perform a SQL Injection attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                },
                "region": {
                  "startLine": 65
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidationOnKeywords.java"
                          },
                          "region": {
                            "startLine": 53
                          }
                        },
                        "message": {
                          "text": "Tainted input \"userId\" was received in line 53 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidationOnKeywords.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidationOnKeywords.java"
                          },
                          "region": {
                            "startLine": 53
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"userId\" in line 53 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidationOnKeywords.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                          },
                          "region": {
                            "startLine": 56
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"accountName\" in line 56 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 4,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                          },
                          "region": {
                            "startLine": 60
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"query\" in line 60 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 5,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                          },
                          "region": {
                            "startLine": 65
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"statement.executeQuery\" in line 65 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java, causing a High risk SQL Injection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-sqli",
          "level": "error",
          "message": {
            "text": "executeQuery method of Statement object could be abused to perform a SQL Injection attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                },
                "region": {
                  "startLine": 66
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 56
                          }
                        },
                        "message": {
                          "text": "Tainted input \"name\" was received in line 56 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 56
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"name\" in line 56 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 59
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"name\" in line 59 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 4,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 61
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"query\" in line 61 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 5,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 66
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"statement.executeQuery\" in line 66 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java, causing a High risk SQL Injection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-sqli",
          "level": "error",
          "message": {
            "text": "executeQuery method of Statement object could be abused to perform a SQL Injection attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                },
                "region": {
                  "startLine": 66
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 56
                          }
                        },
                        "message": {
                          "text": "Tainted input \"auth_tan\" was received in line 56 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 56
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"auth_tan\" in line 56 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 59
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"auth_tan\" in line 59 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 4,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 61
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"query\" in line 61 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 5,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 66
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"statement.executeQuery\" in line 66 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java, causing a High risk SQL Injection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-sqli",
          "level": "error",
          "message": {
            "text": "executeQuery method of Statement object could be abused to perform a SQL Injection attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                },
                "region": {
                  "startLine": 66
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 61
                          }
                        },
                        "message": {
                          "text": "Tainted input \"name\" was received in line 61 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 61
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"query\" in line 61 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 66
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"statement.executeQuery\" in line 66 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java, causing a High risk SQL Injection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-sqli",
          "level": "error",
          "message": {
            "text": "executeQuery method of Statement object could be abused to perform a SQL Injection attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                },
                "region": {
                  "startLine": 66
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 61
                          }
                        },
                        "message": {
                          "text": "Tainted input \"auth_tan\" was received in line 61 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 61
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"query\" in line 61 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 66
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"statement.executeQuery\" in line 66 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java, causing a High risk SQL Injection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-sqli",
          "level": "error",
          "message": {
            "text": "prepareStatement could be abused to perform a SQL Injection attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                },
                "region": {
                  "startLine": 59
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                          },
                          "region": {
                            "startLine": 59
                          }
                        },
                        "message": {
                          "text": "Tainted input \"password_login\" was received in line 59 of the file src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                          },
                          "region": {
                            "startLine": 59
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"connection.prepareStatement\" in line 59 of the file src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java, causing a High risk SQL Injection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-path-traversal",
          "level": "error",
          "message": {
            "text": "File could be abused to disclose or manipulate sensitive files."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java"
                },
                "region": {
                  "startLine": 54
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java"
                          },
                          "region": {
                            "startLine": 52
                          }
                        },
                        "message": {
                          "text": "Tainted input \"args\" was received in line 52 of the file src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java"
                          },
                          "region": {
                            "startLine": 52
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"element\" in line 52 of the file src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java"
                          },
                          "region": {
                            "startLine": 54
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"File\" in line 54 of the file src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java, causing a High risk Path/Directory Traversal vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-path-traversal",
          "level": "error",
          "message": {
            "text": "File could be abused to disclose or manipulate sensitive files."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java"
                },
                "region": {
                  "startLine": 76
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java"
                          },
                          "region": {
                            "startLine": 76
                          }
                        },
                        "message": {
                          "text": "Tainted input \"getOriginalFilename\" was received in line 76 of the file src/main/java/org/owasp/webgoat/webwolf/FileServer.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java"
                          },
                          "region": {
                            "startLine": 76
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"File\" in line 76 of the file src/main/java/org/owasp/webgoat/webwolf/FileServer.java, causing a High risk Path/Directory Traversal vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-path-traversal",
          "level": "error",
          "message": {
            "text": "File could be abused to disclose or manipulate sensitive files."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java"
                },
                "region": {
                  "startLine": 43
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRemoveUserInput.java"
                          },
                          "region": {
                            "startLine": 27
                          }
                        },
                        "message": {
                          "text": "Tainted input \"getOriginalFilename\" was received in line 27 of the file src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRemoveUserInput.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRemoveUserInput.java"
                          },
                          "region": {
                            "startLine": 27
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"getOriginalFilename\" in line 27 of the file src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRemoveUserInput.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java"
                          },
                          "region": {
                            "startLine": 28
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"fullName\" in line 28 of the file src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 4,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java"
                          },
                          "region": {
                            "startLine": 43
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"File\" in line 43 of the file src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java, causing a High risk Path/Directory Traversal vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-path-traversal",
          "level": "error",
          "message": {
            "text": "File could be abused to disclose or manipulate sensitive files."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java"
                },
                "region": {
                  "startLine": 77
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java"
                          },
                          "region": {
                            "startLine": 77
                          }
                        },
                        "message": {
                          "text": "Tainted input \"getOriginalFilename\" was received in line 77 of the file src/main/java/org/owasp/webgoat/webwolf/FileServer.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java"
                          },
                          "region": {
                            "startLine": 77
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"File\" in line 77 of the file src/main/java/org/owasp/webgoat/webwolf/FileServer.java, causing a High risk Path/Directory Traversal vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-path-traversal",
          "level": "error",
          "message": {
            "text": "File could be abused to disclose or manipulate sensitive files."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java"
                },
                "region": {
                  "startLine": 43
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadFix.java"
                          },
                          "region": {
                            "startLine": 31
                          }
                        },
                        "message": {
                          "text": "Tainted input \"fullName\" was received in line 31 of the file src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadFix.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadFix.java"
                          },
                          "region": {
                            "startLine": 31
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"fullName\" in line 31 of the file src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadFix.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java"
                          },
                          "region": {
                            "startLine": 28
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"fullName\" in line 28 of the file src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 4,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java"
                          },
                          "region": {
                            "startLine": 43
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"File\" in line 43 of the file src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java, causing a High risk Path/Directory Traversal vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-path-traversal",
          "level": "error",
          "message": {
            "text": "File could be abused to disclose or manipulate sensitive files."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java"
                },
                "region": {
                  "startLine": 43
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUpload.java"
                          },
                          "region": {
                            "startLine": 29
                          }
                        },
                        "message": {
                          "text": "Tainted input \"fullName\" was received in line 29 of the file src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUpload.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUpload.java"
                          },
                          "region": {
                            "startLine": 29
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"fullName\" in line 29 of the file src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUpload.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java"
                          },
                          "region": {
                            "startLine": 28
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"fullName\" in line 28 of the file src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 4,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java"
                          },
                          "region": {
                            "startLine": 43
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"File\" in line 43 of the file src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java, causing a High risk Path/Directory Traversal vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-path-traversal",
          "level": "error",
          "message": {
            "text": "File could be abused to disclose or manipulate sensitive files."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                },
                "region": {
                  "startLine": 86
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                          },
                          "region": {
                            "startLine": 85
                          }
                        },
                        "message": {
                          "text": "Tainted input \"getParameter\" was received in line 85 of the file src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                          },
                          "region": {
                            "startLine": 85
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"id\" in line 85 of the file src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                          },
                          "region": {
                            "startLine": 86
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"File\" in line 86 of the file src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java, causing a High risk Path/Directory Traversal vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-xss",
          "level": "error",
          "message": {
            "text": "Spring methods with @ResponseBody could be abused to perform a Cross Site Scripting attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge1/ImageServlet.java"
                },
                "region": {
                  "startLine": 34
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge1/ImageServlet.java"
                          },
                          "region": {
                            "startLine": 25
                          }
                        },
                        "message": {
                          "text": "Tainted input \"readAllBytes\" was received in line 25 of the file src/main/java/org/owasp/webgoat/lessons/challenges/challenge1/ImageServlet.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge1/ImageServlet.java"
                          },
                          "region": {
                            "startLine": 25
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"in\" in line 25 of the file src/main/java/org/owasp/webgoat/lessons/challenges/challenge1/ImageServlet.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge1/ImageServlet.java"
                          },
                          "region": {
                            "startLine": 34
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Spring_Return_XSS\" in line 34 of the file src/main/java/org/owasp/webgoat/lessons/challenges/challenge1/ImageServlet.java, causing a High risk Cross-Site Scripting vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-xss",
          "level": "error",
          "message": {
            "text": "println method of PrintWriter object could be abused to perform a Cross Site Scripting attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/Ping.java"
                },
                "region": {
                  "startLine": 55
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/Ping.java"
                          },
                          "region": {
                            "startLine": 50
                          }
                        },
                        "message": {
                          "text": "Tainted input \"text\" was received in line 50 of the file src/main/java/org/owasp/webgoat/lessons/xxe/Ping.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/Ping.java"
                          },
                          "region": {
                            "startLine": 50
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"logLine\" in line 50 of the file src/main/java/org/owasp/webgoat/lessons/xxe/Ping.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/Ping.java"
                          },
                          "region": {
                            "startLine": 55
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"pw.println\" in line 55 of the file src/main/java/org/owasp/webgoat/lessons/xxe/Ping.java, causing a High risk Cross-Site Scripting vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-xss",
          "level": "error",
          "message": {
            "text": "Spring methods with @ResponseBody could be abused to perform a Cross Site Scripting attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                },
                "region": {
                  "startLine": 78
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                          },
                          "region": {
                            "startLine": 63
                          }
                        },
                        "message": {
                          "text": "Tainted input \"executeQuery\" was received in line 63 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                          },
                          "region": {
                            "startLine": 63
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"results\" in line 63 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 115
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"table\" in line 115 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 4,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 125
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"table\" in line 125 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 5,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                          },
                          "region": {
                            "startLine": 67
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"output\" in line 67 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 6,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                          },
                          "region": {
                            "startLine": 78
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Spring_Return_XSS\" in line 78 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java, causing a High risk Cross-Site Scripting vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-xss",
          "level": "error",
          "message": {
            "text": "addObject method could be abused to perform a Cross Site Scripting attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java"
                },
                "region": {
                  "startLine": 103
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java"
                          },
                          "region": {
                            "startLine": 103
                          }
                        },
                        "message": {
                          "text": "Tainted input \"getParameter\" was received in line 103 of the file src/main/java/org/owasp/webgoat/webwolf/FileServer.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java"
                          },
                          "region": {
                            "startLine": 103
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"modelAndView.addObject\" in line 103 of the file src/main/java/org/owasp/webgoat/webwolf/FileServer.java, causing a High risk Cross-Site Scripting vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-xss",
          "level": "error",
          "message": {
            "text": "Spring methods with @ResponseBody could be abused to perform a Cross Site Scripting attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge1/ImageServlet.java"
                },
                "region": {
                  "startLine": 34
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge1/ImageServlet.java"
                          },
                          "region": {
                            "startLine": 25
                          }
                        },
                        "message": {
                          "text": "Tainted input \"getInputStream\" was received in line 25 of the file src/main/java/org/owasp/webgoat/lessons/challenges/challenge1/ImageServlet.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge1/ImageServlet.java"
                          },
                          "region": {
                            "startLine": 25
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"in\" in line 25 of the file src/main/java/org/owasp/webgoat/lessons/challenges/challenge1/ImageServlet.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge1/ImageServlet.java"
                          },
                          "region": {
                            "startLine": 34
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Spring_Return_XSS\" in line 34 of the file src/main/java/org/owasp/webgoat/lessons/challenges/challenge1/ImageServlet.java, causing a High risk Cross-Site Scripting vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-xss",
          "level": "error",
          "message": {
            "text": "println method of PrintWriter object could be abused to perform a Cross Site Scripting attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/Ping.java"
                },
                "region": {
                  "startLine": 55
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/Ping.java"
                          },
                          "region": {
                            "startLine": 50
                          }
                        },
                        "message": {
                          "text": "Tainted input \"userAgent\" was received in line 50 of the file src/main/java/org/owasp/webgoat/lessons/xxe/Ping.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/Ping.java"
                          },
                          "region": {
                            "startLine": 50
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"logLine\" in line 50 of the file src/main/java/org/owasp/webgoat/lessons/xxe/Ping.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/Ping.java"
                          },
                          "region": {
                            "startLine": 55
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"pw.println\" in line 55 of the file src/main/java/org/owasp/webgoat/lessons/xxe/Ping.java, causing a High risk Cross-Site Scripting vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-insecure-ds",
          "level": "error",
          "message": {
            "text": "ObjectInputStream method with unvalidated input could result in deserialization vulnerabilities that could lead to arbitrary code execution or denial of service."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/deserialization/InsecureDeserializationTask.java"
                },
                "region": {
                  "startLine": 54
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/deserialization/InsecureDeserializationTask.java"
                          },
                          "region": {
                            "startLine": 52
                          }
                        },
                        "message": {
                          "text": "Tainted input \"token\" was received in line 52 of the file src/main/java/org/owasp/webgoat/lessons/deserialization/InsecureDeserializationTask.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/deserialization/InsecureDeserializationTask.java"
                          },
                          "region": {
                            "startLine": 52
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"b64token\" in line 52 of the file src/main/java/org/owasp/webgoat/lessons/deserialization/InsecureDeserializationTask.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/deserialization/InsecureDeserializationTask.java"
                          },
                          "region": {
                            "startLine": 54
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"ObjectInputStream\" in line 54 of the file src/main/java/org/owasp/webgoat/lessons/deserialization/InsecureDeserializationTask.java, causing a High risk Deserialization of Untrusted Data vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-insecure-ds",
          "level": "error",
          "message": {
            "text": "fromXML method with unvalidated input could result in deserialization vulnerabilities that could lead to arbitrary code execution or denial of service."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLesson.java"
                },
                "region": {
                  "startLine": 52
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLesson.java"
                          },
                          "region": {
                            "startLine": 52
                          }
                        },
                        "message": {
                          "text": "Tainted input \"payload\" was received in line 52 of the file src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLesson.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLesson.java"
                          },
                          "region": {
                            "startLine": 52
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"xstream.fromXML\" in line 52 of the file src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLesson.java, causing a High risk Deserialization of Untrusted Data vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-ssrf",
          "level": "error",
          "message": {
            "text": "URL could be abused to perform Server Side Request Forgery attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java"
                },
                "region": {
                  "startLine": 53
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java"
                          },
                          "region": {
                            "startLine": 53
                          }
                        },
                        "message": {
                          "text": "Tainted input \"url\" was received in line 53 of the file src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java"
                          },
                          "region": {
                            "startLine": 53
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"URL\" in line 53 of the file src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java, causing a High risk Server Side Request Forgery vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-ssrf",
          "level": "error",
          "message": {
            "text": "URL could be abused to perform Server Side Request Forgery attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java"
                },
                "region": {
                  "startLine": 53
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java"
                          },
                          "region": {
                            "startLine": 47
                          }
                        },
                        "message": {
                          "text": "Tainted input \"url\" was received in line 47 of the file src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java"
                          },
                          "region": {
                            "startLine": 47
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"url\" in line 47 of the file src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java"
                          },
                          "region": {
                            "startLine": 50
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"url\" in line 50 of the file src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 4,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java"
                          },
                          "region": {
                            "startLine": 53
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"URL\" in line 53 of the file src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java, causing a High risk Server Side Request Forgery vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-hardcoded-creds",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionAC.java"
                },
                "region": {
                  "startLine": 33
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionAC.java"
                          },
                          "region": {
                            "startLine": 33
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Hardcoded Credentials\" was received in line 33 of the file src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionAC.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionAC.java"
                          },
                          "region": {
                            "startLine": 33
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Hardcoded Credentials\" in line 33 of the file src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionAC.java, causing a Medium risk Hardcoded Password/Credentials vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-hardcoded-creds",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/lessontemplate/SampleAttack.java"
                },
                "region": {
                  "startLine": 48
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/lessontemplate/SampleAttack.java"
                          },
                          "region": {
                            "startLine": 48
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Hardcoded Credentials\" was received in line 48 of the file src/main/java/org/owasp/webgoat/lessons/lessontemplate/SampleAttack.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/lessontemplate/SampleAttack.java"
                          },
                          "region": {
                            "startLine": 48
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Hardcoded Credentials\" in line 48 of the file src/main/java/org/owasp/webgoat/lessons/lessontemplate/SampleAttack.java, causing a Medium risk Hardcoded Password/Credentials vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-hardcoded-creds",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java"
                },
                "region": {
                  "startLine": 54
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java"
                          },
                          "region": {
                            "startLine": 54
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Hardcoded Credentials\" was received in line 54 of the file src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java"
                          },
                          "region": {
                            "startLine": 54
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Hardcoded Credentials\" in line 54 of the file src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java, causing a Medium risk Hardcoded Password/Credentials vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-hardcoded-creds",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                },
                "region": {
                  "startLine": 62
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                          },
                          "region": {
                            "startLine": 62
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Hardcoded Credentials\" was received in line 62 of the file src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                          },
                          "region": {
                            "startLine": 62
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Hardcoded Credentials\" in line 62 of the file src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java, causing a Medium risk Hardcoded Password/Credentials vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-hardcoded-creds",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java"
                },
                "region": {
                  "startLine": 34
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java"
                          },
                          "region": {
                            "startLine": 34
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Hardcoded Credentials\" was received in line 34 of the file src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java"
                          },
                          "region": {
                            "startLine": 34
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Hardcoded Credentials\" in line 34 of the file src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java, causing a Medium risk Hardcoded Password/Credentials vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-hardcoded-creds",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                },
                "region": {
                  "startLine": 61
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                          },
                          "region": {
                            "startLine": 61
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Hardcoded Credentials\" was received in line 61 of the file src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                          },
                          "region": {
                            "startLine": 61
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Hardcoded Credentials\" in line 61 of the file src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java, causing a Medium risk Hardcoded Password/Credentials vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-hardcoded-creds",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java"
                },
                "region": {
                  "startLine": 61
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java"
                          },
                          "region": {
                            "startLine": 61
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Hardcoded Credentials\" was received in line 61 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java"
                          },
                          "region": {
                            "startLine": 61
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Hardcoded Credentials\" in line 61 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java, causing a Medium risk Hardcoded Password/Credentials vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-hardcoded-creds",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java"
                },
                "region": {
                  "startLine": 36
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java"
                          },
                          "region": {
                            "startLine": 36
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Hardcoded Credentials\" was received in line 36 of the file src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java"
                          },
                          "region": {
                            "startLine": 36
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Hardcoded Credentials\" in line 36 of the file src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java, causing a Medium risk Hardcoded Password/Credentials vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-hardcoded-creds",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionAC.java"
                },
                "region": {
                  "startLine": 32
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionAC.java"
                          },
                          "region": {
                            "startLine": 32
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Hardcoded Credentials\" was received in line 32 of the file src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionAC.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionAC.java"
                          },
                          "region": {
                            "startLine": 32
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Hardcoded Credentials\" in line 32 of the file src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionAC.java, causing a Medium risk Hardcoded Password/Credentials vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-hardcoded-creds",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java"
                },
                "region": {
                  "startLine": 35
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java"
                          },
                          "region": {
                            "startLine": 35
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Hardcoded Credentials\" was received in line 35 of the file src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java"
                          },
                          "region": {
                            "startLine": 35
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Hardcoded Credentials\" in line 35 of the file src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java, causing a Medium risk Hardcoded Password/Credentials vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-xxe",
          "level": "warning",
          "message": {
            "text": "Application could be vulnerable to External Entity Injection (XXE)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/CommentsCache.java"
                },
                "region": {
                  "startLine": 102
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/SimpleXXE.java"
                          },
                          "region": {
                            "startLine": 71
                          }
                        },
                        "message": {
                          "text": "Tainted input \"commentStr\" was received in line 71 of the file src/main/java/org/owasp/webgoat/lessons/xxe/SimpleXXE.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/SimpleXXE.java"
                          },
                          "region": {
                            "startLine": 71
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"commentStr\" in line 71 of the file src/main/java/org/owasp/webgoat/lessons/xxe/SimpleXXE.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/CommentsCache.java"
                          },
                          "region": {
                            "startLine": 93
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"xml\" in line 93 of the file src/main/java/org/owasp/webgoat/lessons/xxe/CommentsCache.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 4,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/CommentsCache.java"
                          },
                          "region": {
                            "startLine": 102
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"xif.createXMLStreamReader\" in line 102 of the file src/main/java/org/owasp/webgoat/lessons/xxe/CommentsCache.java, causing a Medium risk XML External Entity (XXE) Injection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-xxe",
          "level": "warning",
          "message": {
            "text": "Application could be vulnerable to External Entity Injection (XXE)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/CommentsCache.java"
                },
                "region": {
                  "startLine": 102
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/BlindSendFileAssignment.java"
                          },
                          "region": {
                            "startLine": 89
                          }
                        },
                        "message": {
                          "text": "Tainted input \"commentStr\" was received in line 89 of the file src/main/java/org/owasp/webgoat/lessons/xxe/BlindSendFileAssignment.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/BlindSendFileAssignment.java"
                          },
                          "region": {
                            "startLine": 89
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"commentStr\" in line 89 of the file src/main/java/org/owasp/webgoat/lessons/xxe/BlindSendFileAssignment.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/CommentsCache.java"
                          },
                          "region": {
                            "startLine": 93
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"xml\" in line 93 of the file src/main/java/org/owasp/webgoat/lessons/xxe/CommentsCache.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 4,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/CommentsCache.java"
                          },
                          "region": {
                            "startLine": 102
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"xif.createXMLStreamReader\" in line 102 of the file src/main/java/org/owasp/webgoat/lessons/xxe/CommentsCache.java, causing a Medium risk XML External Entity (XXE) Injection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-xxe",
          "level": "warning",
          "message": {
            "text": "Application could be vulnerable to External Entity Injection (XXE)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/CommentsCache.java"
                },
                "region": {
                  "startLine": 102
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/ContentTypeAssignment.java"
                          },
                          "region": {
                            "startLine": 71
                          }
                        },
                        "message": {
                          "text": "Tainted input \"commentStr\" was received in line 71 of the file src/main/java/org/owasp/webgoat/lessons/xxe/ContentTypeAssignment.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/ContentTypeAssignment.java"
                          },
                          "region": {
                            "startLine": 71
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"commentStr\" in line 71 of the file src/main/java/org/owasp/webgoat/lessons/xxe/ContentTypeAssignment.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/CommentsCache.java"
                          },
                          "region": {
                            "startLine": 93
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"xml\" in line 93 of the file src/main/java/org/owasp/webgoat/lessons/xxe/CommentsCache.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 4,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/CommentsCache.java"
                          },
                          "region": {
                            "startLine": 102
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"xif.createXMLStreamReader\" in line 102 of the file src/main/java/org/owasp/webgoat/lessons/xxe/CommentsCache.java, causing a Medium risk XML External Entity (XXE) Injection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-weak-rnd",
          "level": "warning",
          "message": {
            "text": "It is not advised to use weak random generator methods."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                },
                "region": {
                  "startLine": 52
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                          },
                          "region": {
                            "startLine": 52
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Weak Random\" was received in line 52 of the file src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                          },
                          "region": {
                            "startLine": 52
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Weak Random\" in line 52 of the file src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java, causing a Medium risk Weak Pseudo-Random vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-weak-rnd",
          "level": "warning",
          "message": {
            "text": "It is not advised to use weak random generator methods."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                },
                "region": {
                  "startLine": 73
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                          },
                          "region": {
                            "startLine": 73
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Weak Random\" was received in line 73 of the file src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                          },
                          "region": {
                            "startLine": 73
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Weak Random\" in line 73 of the file src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java, causing a Medium risk Weak Pseudo-Random vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-weak-rnd",
          "level": "warning",
          "message": {
            "text": "It is not advised to use weak random generator methods."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/csrf/CSRFGetFlag.java"
                },
                "region": {
                  "startLine": 62
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/csrf/CSRFGetFlag.java"
                          },
                          "region": {
                            "startLine": 62
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Weak Random\" was received in line 62 of the file src/main/java/org/owasp/webgoat/lessons/csrf/CSRFGetFlag.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/csrf/CSRFGetFlag.java"
                          },
                          "region": {
                            "startLine": 62
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Weak Random\" in line 62 of the file src/main/java/org/owasp/webgoat/lessons/csrf/CSRFGetFlag.java, causing a Medium risk Weak Pseudo-Random vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-weak-rnd",
          "level": "warning",
          "message": {
            "text": "It is not advised to use weak random generator methods."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/csrf/CSRFGetFlag.java"
                },
                "region": {
                  "startLine": 68
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/csrf/CSRFGetFlag.java"
                          },
                          "region": {
                            "startLine": 68
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Weak Random\" was received in line 68 of the file src/main/java/org/owasp/webgoat/lessons/csrf/CSRFGetFlag.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/csrf/CSRFGetFlag.java"
                          },
                          "region": {
                            "startLine": 68
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Weak Random\" in line 68 of the file src/main/java/org/owasp/webgoat/lessons/csrf/CSRFGetFlag.java, causing a Medium risk Weak Pseudo-Random vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-weak-rnd",
          "level": "warning",
          "message": {
            "text": "It is not advised to use weak random generator methods."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/csrf/CSRFGetFlag.java"
                },
                "region": {
                  "startLine": 79
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/csrf/CSRFGetFlag.java"
                          },
                          "region": {
                            "startLine": 79
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Weak Random\" was received in line 79 of the file src/main/java/org/owasp/webgoat/lessons/csrf/CSRFGetFlag.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/csrf/CSRFGetFlag.java"
                          },
                          "region": {
                            "startLine": 79
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Weak Random\" in line 79 of the file src/main/java/org/owasp/webgoat/lessons/csrf/CSRFGetFlag.java, causing a Medium risk Weak Pseudo-Random vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-weak-rnd",
          "level": "warning",
          "message": {
            "text": "It is not advised to use weak random generator methods."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/hijacksession/cas/HijackSessionAuthenticationProvider.java"
                },
                "region": {
                  "startLine": 51
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/hijacksession/cas/HijackSessionAuthenticationProvider.java"
                          },
                          "region": {
                            "startLine": 51
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Weak Random\" was received in line 51 of the file src/main/java/org/owasp/webgoat/lessons/hijacksession/cas/HijackSessionAuthenticationProvider.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/hijacksession/cas/HijackSessionAuthenticationProvider.java"
                          },
                          "region": {
                            "startLine": 51
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Weak Random\" in line 51 of the file src/main/java/org/owasp/webgoat/lessons/hijacksession/cas/HijackSessionAuthenticationProvider.java, causing a Medium risk Weak Pseudo-Random vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-weak-rnd",
          "level": "warning",
          "message": {
            "text": "It is not advised to use weak random generator methods."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java"
                },
                "region": {
                  "startLine": 55
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java"
                          },
                          "region": {
                            "startLine": 55
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Weak Random\" was received in line 55 of the file src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java"
                          },
                          "region": {
                            "startLine": 55
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Weak Random\" in line 55 of the file src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java, causing a Medium risk Weak Pseudo-Random vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-weak-rnd",
          "level": "warning",
          "message": {
            "text": "It is not advised to use weak random generator methods."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/PasswordResetLink.java"
                },
                "region": {
                  "startLine": 14
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/PasswordResetLink.java"
                          },
                          "region": {
                            "startLine": 14
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Weak Random\" was received in line 14 of the file src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/PasswordResetLink.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/PasswordResetLink.java"
                          },
                          "region": {
                            "startLine": 14
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Weak Random\" in line 14 of the file src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/PasswordResetLink.java, causing a Medium risk Weak Pseudo-Random vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-weak-rnd",
          "level": "warning",
          "message": {
            "text": "It is not advised to use weak random generator methods."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                },
                "region": {
                  "startLine": 54
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                          },
                          "region": {
                            "startLine": 54
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Weak Random\" was received in line 54 of the file src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                          },
                          "region": {
                            "startLine": 54
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Weak Random\" in line 54 of the file src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java, causing a Medium risk Weak Pseudo-Random vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/User.java"
                },
                "region": {
                  "startLine": 13
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/User.java"
                          },
                          "region": {
                            "startLine": 13
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 13 of the file src/main/java/org/owasp/webgoat/lessons/missingac/User.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/User.java"
                          },
                          "region": {
                            "startLine": 13
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 13 of the file src/main/java/org/owasp/webgoat/lessons/missingac/User.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".mvn/wrapper/MavenWrapperDownloader.java"
                },
                "region": {
                  "startLine": 100
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java"
                          },
                          "region": {
                            "startLine": 100
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 100 of the file .mvn/wrapper/MavenWrapperDownloader.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java"
                          },
                          "region": {
                            "startLine": 100
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 100 of the file .mvn/wrapper/MavenWrapperDownloader.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java"
                },
                "region": {
                  "startLine": 54
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java"
                          },
                          "region": {
                            "startLine": 54
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 54 of the file src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java"
                          },
                          "region": {
                            "startLine": 54
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 54 of the file src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/it/java/org/owasp/webgoat/CryptoIntegrationTest.java"
                },
                "region": {
                  "startLine": 60
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/it/java/org/owasp/webgoat/CryptoIntegrationTest.java"
                          },
                          "region": {
                            "startLine": 60
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 60 of the file src/it/java/org/owasp/webgoat/CryptoIntegrationTest.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/it/java/org/owasp/webgoat/CryptoIntegrationTest.java"
                          },
                          "region": {
                            "startLine": 60
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 60 of the file src/it/java/org/owasp/webgoat/CryptoIntegrationTest.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/lessontemplate/SampleAttack.java"
                },
                "region": {
                  "startLine": 48
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/lessontemplate/SampleAttack.java"
                          },
                          "region": {
                            "startLine": 48
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 48 of the file src/main/java/org/owasp/webgoat/lessons/lessontemplate/SampleAttack.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/lessontemplate/SampleAttack.java"
                          },
                          "region": {
                            "startLine": 48
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 48 of the file src/main/java/org/owasp/webgoat/lessons/lessontemplate/SampleAttack.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java"
                },
                "region": {
                  "startLine": 57
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java"
                          },
                          "region": {
                            "startLine": 57
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 57 of the file src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java"
                          },
                          "region": {
                            "startLine": 57
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 57 of the file src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java"
                },
                "region": {
                  "startLine": 55
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java"
                          },
                          "region": {
                            "startLine": 55
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 55 of the file src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java"
                          },
                          "region": {
                            "startLine": 55
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 55 of the file src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/container/users/UserForm.java"
                },
                "region": {
                  "startLine": 27
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/container/users/UserForm.java"
                          },
                          "region": {
                            "startLine": 27
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 27 of the file src/main/java/org/owasp/webgoat/container/users/UserForm.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/container/users/UserForm.java"
                          },
                          "region": {
                            "startLine": 27
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 27 of the file src/main/java/org/owasp/webgoat/container/users/UserForm.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java"
                },
                "region": {
                  "startLine": 74
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java"
                          },
                          "region": {
                            "startLine": 74
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 74 of the file src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java"
                          },
                          "region": {
                            "startLine": 74
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 74 of the file src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/it/java/org/owasp/webgoat/CryptoIntegrationTest.java"
                },
                "region": {
                  "startLine": 86
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/it/java/org/owasp/webgoat/CryptoIntegrationTest.java"
                          },
                          "region": {
                            "startLine": 86
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 86 of the file src/it/java/org/owasp/webgoat/CryptoIntegrationTest.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/it/java/org/owasp/webgoat/CryptoIntegrationTest.java"
                          },
                          "region": {
                            "startLine": 86
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 86 of the file src/it/java/org/owasp/webgoat/CryptoIntegrationTest.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/it/java/org/owasp/webgoat/GeneralLessonIntegrationTest.java"
                },
                "region": {
                  "startLine": 145
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/it/java/org/owasp/webgoat/GeneralLessonIntegrationTest.java"
                          },
                          "region": {
                            "startLine": 145
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 145 of the file src/it/java/org/owasp/webgoat/GeneralLessonIntegrationTest.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/it/java/org/owasp/webgoat/GeneralLessonIntegrationTest.java"
                          },
                          "region": {
                            "startLine": 145
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 145 of the file src/it/java/org/owasp/webgoat/GeneralLessonIntegrationTest.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                },
                "region": {
                  "startLine": 86
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                          },
                          "region": {
                            "startLine": 86
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 86 of the file src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                          },
                          "region": {
                            "startLine": 86
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 86 of the file src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                },
                "region": {
                  "startLine": 85
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                          },
                          "region": {
                            "startLine": 85
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 85 of the file src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                          },
                          "region": {
                            "startLine": 85
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 85 of the file src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                },
                "region": {
                  "startLine": 72
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                          },
                          "region": {
                            "startLine": 72
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 72 of the file src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                          },
                          "region": {
                            "startLine": 72
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 72 of the file src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                },
                "region": {
                  "startLine": 45
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                          },
                          "region": {
                            "startLine": 45
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 45 of the file src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                          },
                          "region": {
                            "startLine": 45
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 45 of the file src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                },
                "region": {
                  "startLine": 70
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                          },
                          "region": {
                            "startLine": 70
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 70 of the file src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                          },
                          "region": {
                            "startLine": 70
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 70 of the file src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/it/java/org/owasp/webgoat/XSSIntegrationTest.java"
                },
                "region": {
                  "startLine": 51
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/it/java/org/owasp/webgoat/XSSIntegrationTest.java"
                          },
                          "region": {
                            "startLine": 51
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 51 of the file src/it/java/org/owasp/webgoat/XSSIntegrationTest.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/it/java/org/owasp/webgoat/XSSIntegrationTest.java"
                          },
                          "region": {
                            "startLine": 51
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 51 of the file src/it/java/org/owasp/webgoat/XSSIntegrationTest.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionAC.java"
                },
                "region": {
                  "startLine": 33
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionAC.java"
                          },
                          "region": {
                            "startLine": 33
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 33 of the file src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionAC.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionAC.java"
                          },
                          "region": {
                            "startLine": 33
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 33 of the file src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionAC.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionAC.java"
                },
                "region": {
                  "startLine": 32
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionAC.java"
                          },
                          "region": {
                            "startLine": 32
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 32 of the file src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionAC.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionAC.java"
                          },
                          "region": {
                            "startLine": 32
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 32 of the file src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionAC.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/container/users/UserForm.java"
                },
                "region": {
                  "startLine": 24
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/container/users/UserForm.java"
                          },
                          "region": {
                            "startLine": 24
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 24 of the file src/main/java/org/owasp/webgoat/container/users/UserForm.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/container/users/UserForm.java"
                          },
                          "region": {
                            "startLine": 24
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 24 of the file src/main/java/org/owasp/webgoat/container/users/UserForm.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                },
                "region": {
                  "startLine": 90
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                          },
                          "region": {
                            "startLine": 90
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 90 of the file src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                          },
                          "region": {
                            "startLine": 90
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 90 of the file src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java"
                },
                "region": {
                  "startLine": 54
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java"
                          },
                          "region": {
                            "startLine": 54
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 54 of the file src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java"
                          },
                          "region": {
                            "startLine": 54
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 54 of the file src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/webwolf/jwt/JWTController.java"
                },
                "region": {
                  "startLine": 24
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/webwolf/jwt/JWTController.java"
                          },
                          "region": {
                            "startLine": 24
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 24 of the file src/main/java/org/owasp/webgoat/webwolf/jwt/JWTController.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/webwolf/jwt/JWTController.java"
                          },
                          "region": {
                            "startLine": 24
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 24 of the file src/main/java/org/owasp/webgoat/webwolf/jwt/JWTController.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/it/java/org/owasp/webgoat/XXEIntegrationTest.java"
                },
                "region": {
                  "startLine": 58
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/it/java/org/owasp/webgoat/XXEIntegrationTest.java"
                          },
                          "region": {
                            "startLine": 58
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 58 of the file src/it/java/org/owasp/webgoat/XXEIntegrationTest.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/it/java/org/owasp/webgoat/XXEIntegrationTest.java"
                          },
                          "region": {
                            "startLine": 58
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 58 of the file src/it/java/org/owasp/webgoat/XXEIntegrationTest.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java"
                },
                "region": {
                  "startLine": 36
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java"
                          },
                          "region": {
                            "startLine": 36
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 36 of the file src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java"
                          },
                          "region": {
                            "startLine": 36
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 36 of the file src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                },
                "region": {
                  "startLine": 60
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                          },
                          "region": {
                            "startLine": 60
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 60 of the file src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                          },
                          "region": {
                            "startLine": 60
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 60 of the file src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java"
                },
                "region": {
                  "startLine": 35
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java"
                          },
                          "region": {
                            "startLine": 35
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 35 of the file src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java"
                          },
                          "region": {
                            "startLine": 35
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 35 of the file src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java"
                },
                "region": {
                  "startLine": 34
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java"
                          },
                          "region": {
                            "startLine": 34
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 34 of the file src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java"
                          },
                          "region": {
                            "startLine": 34
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 34 of the file src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                },
                "region": {
                  "startLine": 61
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                          },
                          "region": {
                            "startLine": 61
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 61 of the file src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                          },
                          "region": {
                            "startLine": 61
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 61 of the file src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                },
                "region": {
                  "startLine": 62
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                          },
                          "region": {
                            "startLine": 62
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 62 of the file src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                          },
                          "region": {
                            "startLine": 62
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 62 of the file src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/resetlink/PasswordChangeForm.java"
                },
                "region": {
                  "startLine": 19
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/resetlink/PasswordChangeForm.java"
                          },
                          "region": {
                            "startLine": 19
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 19 of the file src/main/java/org/owasp/webgoat/lessons/passwordreset/resetlink/PasswordChangeForm.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/resetlink/PasswordChangeForm.java"
                          },
                          "region": {
                            "startLine": 19
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 19 of the file src/main/java/org/owasp/webgoat/lessons/passwordreset/resetlink/PasswordChangeForm.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/it/java/org/owasp/webgoat/JWTLessonIntegrationTest.java"
                },
                "region": {
                  "startLine": 103
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/it/java/org/owasp/webgoat/JWTLessonIntegrationTest.java"
                          },
                          "region": {
                            "startLine": 103
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 103 of the file src/it/java/org/owasp/webgoat/JWTLessonIntegrationTest.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/it/java/org/owasp/webgoat/JWTLessonIntegrationTest.java"
                          },
                          "region": {
                            "startLine": 103
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 103 of the file src/it/java/org/owasp/webgoat/JWTLessonIntegrationTest.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-heap-inspect",
          "level": "warning",
          "message": {
            "text": "Some variables and data in code can contain sensitive information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java"
                },
                "region": {
                  "startLine": 61
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java"
                          },
                          "region": {
                            "startLine": 61
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Heap Inspection\" was received in line 61 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java"
                          },
                          "region": {
                            "startLine": 61
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Heap Inspection\" in line 61 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java, causing a Medium risk Heap Inspection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-misc",
          "level": "warning",
          "message": {
            "text": "It is not advised to disable CSRF tokens."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/webwolf/WebSecurityConfig.java"
                },
                "region": {
                  "startLine": 58
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/webwolf/WebSecurityConfig.java"
                          },
                          "region": {
                            "startLine": 58
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Disabled CSRF Token\" was received in line 58 of the file src/main/java/org/owasp/webgoat/webwolf/WebSecurityConfig.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/webwolf/WebSecurityConfig.java"
                          },
                          "region": {
                            "startLine": 58
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Disabled CSRF Token\" in line 58 of the file src/main/java/org/owasp/webgoat/webwolf/WebSecurityConfig.java, causing a Medium risk Miscellaneous Dangerous Functions vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-misc",
          "level": "warning",
          "message": {
            "text": "It is not advised to disable CSRF tokens."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/container/WebSecurityConfig.java"
                },
                "region": {
                  "startLine": 74
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/container/WebSecurityConfig.java"
                          },
                          "region": {
                            "startLine": 74
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Disabled CSRF Token\" was received in line 74 of the file src/main/java/org/owasp/webgoat/container/WebSecurityConfig.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/container/WebSecurityConfig.java"
                          },
                          "region": {
                            "startLine": 74
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Disabled CSRF Token\" in line 74 of the file src/main/java/org/owasp/webgoat/container/WebSecurityConfig.java, causing a Medium risk Miscellaneous Dangerous Functions vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-console",
          "level": "warning",
          "message": {
            "text": "System.out.println could reveal sensitive information in the application console."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java"
                },
                "region": {
                  "startLine": 54
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java"
                          },
                          "region": {
                            "startLine": 52
                          }
                        },
                        "message": {
                          "text": "Tainted input \"args\" was received in line 52 of the file src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java"
                          },
                          "region": {
                            "startLine": 52
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"element\" in line 52 of the file src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java"
                          },
                          "region": {
                            "startLine": 54
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"System.out.println\" in line 54 of the file src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java, causing a Medium risk Console Output vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-console",
          "level": "warning",
          "message": {
            "text": "System.out.println could reveal sensitive information in the application console."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/PasswordResetLink.java"
                },
                "region": {
                  "startLine": 40
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/PasswordResetLink.java"
                          },
                          "region": {
                            "startLine": 38
                          }
                        },
                        "message": {
                          "text": "Tainted input \"args\" was received in line 38 of the file src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/PasswordResetLink.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/PasswordResetLink.java"
                          },
                          "region": {
                            "startLine": 38
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"username\" in line 38 of the file src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/PasswordResetLink.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/PasswordResetLink.java"
                          },
                          "region": {
                            "startLine": 40
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"System.out.println\" in line 40 of the file src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/PasswordResetLink.java, causing a Medium risk Console Output vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of SQLException object could reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                },
                "region": {
                  "startLine": 85
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 85
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 85 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 85
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"e.getMessage\" in line 85 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of SQLException object could reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                },
                "region": {
                  "startLine": 84
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 84
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 84 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 84
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"e.getMessage\" in line 84 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of SQLException object could reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                },
                "region": {
                  "startLine": 106
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 106
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 106 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 106
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"e.getMessage\" in line 106 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of SQLException object could reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                },
                "region": {
                  "startLine": 78
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 78
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 78 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 78
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"e.getMessage\" in line 78 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of SQLException object could reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                },
                "region": {
                  "startLine": 77
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 77
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 77 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                          },
                          "region": {
                            "startLine": 77
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"e.getMessage\" in line 77 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of IOException object could be abused to reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java"
                },
                "region": {
                  "startLine": 53
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java"
                          },
                          "region": {
                            "startLine": 53
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 53 of the file src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java"
                          },
                          "region": {
                            "startLine": 53
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"e.getMessage\" in line 53 of the file src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of IOException object could be abused to reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileZipSlip.java"
                },
                "region": {
                  "startLine": 67
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileZipSlip.java"
                          },
                          "region": {
                            "startLine": 67
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 67 of the file src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileZipSlip.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileZipSlip.java"
                          },
                          "region": {
                            "startLine": 67
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"e.getMessage\" in line 67 of the file src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileZipSlip.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of Exception object could be abused to reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                },
                "region": {
                  "startLine": 57
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                          },
                          "region": {
                            "startLine": 57
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 57 of the file src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                          },
                          "region": {
                            "startLine": 57
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"e.getMessage\" in line 57 of the file src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "printStackTrace method could leak sensitive data. Search is limited up to 200 instances of printStackTrace in code, in order to preserve reporting size."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".mvn/wrapper/MavenWrapperDownloader.java"
                },
                "region": {
                  "startLine": 92
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java"
                          },
                          "region": {
                            "startLine": 92
                          }
                        },
                        "message": {
                          "text": "Tainted input \"printStackTrace\" was received in line 92 of the file .mvn/wrapper/MavenWrapperDownloader.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java"
                          },
                          "region": {
                            "startLine": 92
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"printStackTrace\" in line 92 of the file .mvn/wrapper/MavenWrapperDownloader.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "printStackTrace method could leak sensitive data. Search is limited up to 200 instances of printStackTrace in code, in order to preserve reporting size."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/it/java/org/owasp/webgoat/LabelAndHintIntegrationTest.java"
                },
                "region": {
                  "startLine": 119
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/it/java/org/owasp/webgoat/LabelAndHintIntegrationTest.java"
                          },
                          "region": {
                            "startLine": 119
                          }
                        },
                        "message": {
                          "text": "Tainted input \"printStackTrace\" was received in line 119 of the file src/it/java/org/owasp/webgoat/LabelAndHintIntegrationTest.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/it/java/org/owasp/webgoat/LabelAndHintIntegrationTest.java"
                          },
                          "region": {
                            "startLine": 119
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"printStackTrace\" in line 119 of the file src/it/java/org/owasp/webgoat/LabelAndHintIntegrationTest.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "printStackTrace method could leak sensitive data. Search is limited up to 200 instances of printStackTrace in code, in order to preserve reporting size."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/it/java/org/owasp/webgoat/CryptoIntegrationTest.java"
                },
                "region": {
                  "startLine": 42
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/it/java/org/owasp/webgoat/CryptoIntegrationTest.java"
                          },
                          "region": {
                            "startLine": 42
                          }
                        },
                        "message": {
                          "text": "Tainted input \"printStackTrace\" was received in line 42 of the file src/it/java/org/owasp/webgoat/CryptoIntegrationTest.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/it/java/org/owasp/webgoat/CryptoIntegrationTest.java"
                          },
                          "region": {
                            "startLine": 42
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"printStackTrace\" in line 42 of the file src/it/java/org/owasp/webgoat/CryptoIntegrationTest.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of Exception object could be abused to reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                },
                "region": {
                  "startLine": 109
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                          },
                          "region": {
                            "startLine": 109
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 109 of the file src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                          },
                          "region": {
                            "startLine": 109
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"e.getMessage\" in line 109 of the file src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of Exception object could be abused to reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java"
                },
                "region": {
                  "startLine": 92
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java"
                          },
                          "region": {
                            "startLine": 92
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 92 of the file src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java"
                          },
                          "region": {
                            "startLine": 92
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"e.getMessage\" in line 92 of the file src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of SQLException object could reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                },
                "region": {
                  "startLine": 92
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                          },
                          "region": {
                            "startLine": 92
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 92 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                          },
                          "region": {
                            "startLine": 92
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"sqle.getMessage\" in line 92 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of Exception object could be abused to reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                },
                "region": {
                  "startLine": 95
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                          },
                          "region": {
                            "startLine": 95
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 95 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                          },
                          "region": {
                            "startLine": 95
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"e.getMessage\" in line 95 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of SQLException object could reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                },
                "region": {
                  "startLine": 79
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                          },
                          "region": {
                            "startLine": 79
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 79 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                          },
                          "region": {
                            "startLine": 79
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"sqle.getMessage\" in line 79 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of Exception object could be abused to reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson3.java"
                },
                "region": {
                  "startLine": 75
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson3.java"
                          },
                          "region": {
                            "startLine": 75
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 75 of the file src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson3.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson3.java"
                          },
                          "region": {
                            "startLine": 75
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"e.getMessage\" in line 75 of the file src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson3.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of Exception object could be abused to reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                },
                "region": {
                  "startLine": 82
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                          },
                          "region": {
                            "startLine": 82
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 82 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                          },
                          "region": {
                            "startLine": 82
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"e.getMessage\" in line 82 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of IOException object could be abused to reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java"
                },
                "region": {
                  "startLine": 57
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java"
                          },
                          "region": {
                            "startLine": 57
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 57 of the file src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java"
                          },
                          "region": {
                            "startLine": 57
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"e.getMessage\" in line 57 of the file src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of Exception object could be abused to reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/idor/IDORViewOwnProfile.java"
                },
                "region": {
                  "startLine": 61
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/idor/IDORViewOwnProfile.java"
                          },
                          "region": {
                            "startLine": 61
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 61 of the file src/main/java/org/owasp/webgoat/lessons/idor/IDORViewOwnProfile.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/idor/IDORViewOwnProfile.java"
                          },
                          "region": {
                            "startLine": 61
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"ex.getMessage\" in line 61 of the file src/main/java/org/owasp/webgoat/lessons/idor/IDORViewOwnProfile.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of SQLException object could reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                },
                "region": {
                  "startLine": 92
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                          },
                          "region": {
                            "startLine": 92
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 92 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                          },
                          "region": {
                            "startLine": 92
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"sqle.getMessage\" in line 92 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of Exception object could be abused to reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLesson.java"
                },
                "region": {
                  "startLine": 54
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLesson.java"
                          },
                          "region": {
                            "startLine": 54
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 54 of the file src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLesson.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLesson.java"
                          },
                          "region": {
                            "startLine": 54
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"ex.getMessage\" in line 54 of the file src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLesson.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of SQLException object could reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTFinalEndpoint.java"
                },
                "region": {
                  "startLine": 99
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTFinalEndpoint.java"
                          },
                          "region": {
                            "startLine": 99
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 99 of the file src/main/java/org/owasp/webgoat/lessons/jwt/JWTFinalEndpoint.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTFinalEndpoint.java"
                          },
                          "region": {
                            "startLine": 99
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"e.getMessage\" in line 99 of the file src/main/java/org/owasp/webgoat/lessons/jwt/JWTFinalEndpoint.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of Exception object could be abused to reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlInjectionLesson10b.java"
                },
                "region": {
                  "startLine": 90
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlInjectionLesson10b.java"
                          },
                          "region": {
                            "startLine": 90
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 90 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlInjectionLesson10b.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlInjectionLesson10b.java"
                          },
                          "region": {
                            "startLine": 90
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"e.getMessage\" in line 90 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlInjectionLesson10b.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of Exception object could be abused to reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask1.java"
                },
                "region": {
                  "startLine": 70
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask1.java"
                          },
                          "region": {
                            "startLine": 70
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 70 of the file src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask1.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask1.java"
                          },
                          "region": {
                            "startLine": 70
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"e.getMessage\" in line 70 of the file src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask1.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of SQLException object could reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                },
                "region": {
                  "startLine": 78
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                          },
                          "region": {
                            "startLine": 78
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 78 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                          },
                          "region": {
                            "startLine": 78
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"e.getMessage\" in line 78 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of SQLException object could reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                },
                "region": {
                  "startLine": 85
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                          },
                          "region": {
                            "startLine": 85
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 85 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                          },
                          "region": {
                            "startLine": 85
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"e.getMessage\" in line 85 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "printStackTrace method could leak sensitive data. Search is limited up to 200 instances of printStackTrace in code, in order to preserve reporting size."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/it/java/org/owasp/webgoat/CryptoIntegrationTest.java"
                },
                "region": {
                  "startLine": 35
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/it/java/org/owasp/webgoat/CryptoIntegrationTest.java"
                          },
                          "region": {
                            "startLine": 35
                          }
                        },
                        "message": {
                          "text": "Tainted input \"printStackTrace\" was received in line 35 of the file src/it/java/org/owasp/webgoat/CryptoIntegrationTest.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/it/java/org/owasp/webgoat/CryptoIntegrationTest.java"
                          },
                          "region": {
                            "startLine": 35
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"printStackTrace\" in line 35 of the file src/it/java/org/owasp/webgoat/CryptoIntegrationTest.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of SQLException object could reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                },
                "region": {
                  "startLine": 96
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                          },
                          "region": {
                            "startLine": 96
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 96 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                          },
                          "region": {
                            "startLine": 96
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"e.getMessage\" in line 96 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of Exception object could be abused to reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                },
                "region": {
                  "startLine": 84
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 84
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 84 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 84
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"e.getMessage\" in line 84 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of SQLException object could reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                },
                "region": {
                  "startLine": 81
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 81
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 81 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                          },
                          "region": {
                            "startLine": 81
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"sqle.getMessage\" in line 81 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of SQLException object could reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                },
                "region": {
                  "startLine": 100
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                          },
                          "region": {
                            "startLine": 100
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 100 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                          },
                          "region": {
                            "startLine": 100
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"e.getMessage\" in line 100 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of SQLException object could reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                },
                "region": {
                  "startLine": 75
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                          },
                          "region": {
                            "startLine": 75
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 75 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                          },
                          "region": {
                            "startLine": 75
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"sqle.getMessage\" in line 75 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of Exception object could be abused to reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5.java"
                },
                "region": {
                  "startLine": 80
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5.java"
                          },
                          "region": {
                            "startLine": 80
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 80 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5.java"
                          },
                          "region": {
                            "startLine": 80
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"e.getMessage\" in line 80 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "printStackTrace method could leak sensitive data. Search is limited up to 200 instances of printStackTrace in code, in order to preserve reporting size."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask1.java"
                },
                "region": {
                  "startLine": 68
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask1.java"
                          },
                          "region": {
                            "startLine": 68
                          }
                        },
                        "message": {
                          "text": "Tainted input \"printStackTrace\" was received in line 68 of the file src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask1.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask1.java"
                          },
                          "region": {
                            "startLine": 68
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"printStackTrace\" in line 68 of the file src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask1.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of SQLException object could reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                },
                "region": {
                  "startLine": 93
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 93
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 93 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 93
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"e.getMessage\" in line 93 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of SQLException object could reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                },
                "region": {
                  "startLine": 89
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 89
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 89 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 89
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"e.getMessage\" in line 89 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of SQLException object could reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java"
                },
                "region": {
                  "startLine": 75
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java"
                          },
                          "region": {
                            "startLine": 75
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 75 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java"
                          },
                          "region": {
                            "startLine": 75
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"sqle.getMessage\" in line 75 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of SQLException object could reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                },
                "region": {
                  "startLine": 140
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 140
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 140 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                          },
                          "region": {
                            "startLine": 140
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"e.getMessage\" in line 140 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "printStackTrace method could leak sensitive data. Search is limited up to 200 instances of printStackTrace in code, in order to preserve reporting size."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java"
                },
                "region": {
                  "startLine": 73
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java"
                          },
                          "region": {
                            "startLine": 73
                          }
                        },
                        "message": {
                          "text": "Tainted input \"printStackTrace\" was received in line 73 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java"
                          },
                          "region": {
                            "startLine": 73
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"printStackTrace\" in line 73 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of IOException object could be abused to reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java"
                },
                "region": {
                  "startLine": 56
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java"
                          },
                          "region": {
                            "startLine": 56
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 56 of the file src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java"
                          },
                          "region": {
                            "startLine": 56
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"x.getMessage\" in line 56 of the file src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of Exception object could be abused to reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java"
                },
                "region": {
                  "startLine": 78
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java"
                          },
                          "region": {
                            "startLine": 78
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 78 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java"
                          },
                          "region": {
                            "startLine": 78
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"e.getMessage\" in line 78 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "printStackTrace method could leak sensitive data. Search is limited up to 200 instances of printStackTrace in code, in order to preserve reporting size."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlInjectionLesson10b.java"
                },
                "region": {
                  "startLine": 112
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlInjectionLesson10b.java"
                          },
                          "region": {
                            "startLine": 112
                          }
                        },
                        "message": {
                          "text": "Tainted input \"printStackTrace\" was received in line 112 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlInjectionLesson10b.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlInjectionLesson10b.java"
                          },
                          "region": {
                            "startLine": 112
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"printStackTrace\" in line 112 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlInjectionLesson10b.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "printStackTrace method could leak sensitive data. Search is limited up to 200 instances of printStackTrace in code, in order to preserve reporting size."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java"
                },
                "region": {
                  "startLine": 77
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java"
                          },
                          "region": {
                            "startLine": 77
                          }
                        },
                        "message": {
                          "text": "Tainted input \"printStackTrace\" was received in line 77 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java"
                          },
                          "region": {
                            "startLine": 77
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"printStackTrace\" in line 77 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of Exception object could be abused to reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLesson.java"
                },
                "region": {
                  "startLine": 65
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLesson.java"
                          },
                          "region": {
                            "startLine": 65
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 65 of the file src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLesson.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLesson.java"
                          },
                          "region": {
                            "startLine": 65
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"e.getMessage\" in line 65 of the file src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLesson.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-err-msg",
          "level": "warning",
          "message": {
            "text": "getMessage method of Exception object could be abused to reveal sensitive internal information."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                },
                "region": {
                  "startLine": 95
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                          },
                          "region": {
                            "startLine": 95
                          }
                        },
                        "message": {
                          "text": "Tainted input \"N/A\" was received in line 95 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                          },
                          "region": {
                            "startLine": 95
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"e.getMessage\" in line 95 of the file src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java, causing a Medium risk Error Messages Information Exposure vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-weak-hash",
          "level": "warning",
          "message": {
            "text": "It is not advised to use weak cryptography methods."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                },
                "region": {
                  "startLine": 56
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                          },
                          "region": {
                            "startLine": 56
                          }
                        },
                        "message": {
                          "text": "Tainted input \"Weak Hashing\" was received in line 56 of the file src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                          },
                          "region": {
                            "startLine": 56
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Weak Hashing\" in line 56 of the file src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java, causing a Low risk Weak Hash Strength vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-cookie-inj",
          "level": "warning",
          "message": {
            "text": "addCookie method could be abused for a Cookie Injection attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                },
                "region": {
                  "startLine": 96
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                          },
                          "region": {
                            "startLine": 71
                          }
                        },
                        "message": {
                          "text": "Tainted input \"username\" was received in line 71 of the file src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                          },
                          "region": {
                            "startLine": 71
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"username\" in line 71 of the file src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                          },
                          "region": {
                            "startLine": 84
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"username\" in line 84 of the file src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 4,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                          },
                          "region": {
                            "startLine": 85
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"lowerCasedUsername\" in line 85 of the file src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 5,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/encoders/EncDec.java"
                          },
                          "region": {
                            "startLine": 52
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"encoded\" in line 52 of the file src/main/java/org/owasp/webgoat/lessons/spoofcookie/encoders/EncDec.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 6,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/encoders/EncDec.java"
                          },
                          "region": {
                            "startLine": 70
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"value\" in line 70 of the file src/main/java/org/owasp/webgoat/lessons/spoofcookie/encoders/EncDec.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 7,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/encoders/EncDec.java"
                          },
                          "region": {
                            "startLine": 53
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"encoded\" in line 53 of the file src/main/java/org/owasp/webgoat/lessons/spoofcookie/encoders/EncDec.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 8,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/encoders/EncDec.java"
                          },
                          "region": {
                            "startLine": 76
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"encoded\" in line 76 of the file src/main/java/org/owasp/webgoat/lessons/spoofcookie/encoders/EncDec.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 9,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/encoders/EncDec.java"
                          },
                          "region": {
                            "startLine": 77
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"encoded\" in line 77 of the file src/main/java/org/owasp/webgoat/lessons/spoofcookie/encoders/EncDec.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 10,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/encoders/EncDec.java"
                          },
                          "region": {
                            "startLine": 54
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"encoded\" in line 54 of the file src/main/java/org/owasp/webgoat/lessons/spoofcookie/encoders/EncDec.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 11,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/encoders/EncDec.java"
                          },
                          "region": {
                            "startLine": 55
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"encoded\" in line 55 of the file src/main/java/org/owasp/webgoat/lessons/spoofcookie/encoders/EncDec.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 12,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                          },
                          "region": {
                            "startLine": 92
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"newCookieValue\" in line 92 of the file src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 13,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                          },
                          "region": {
                            "startLine": 93
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"newCookie\" in line 93 of the file src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 14,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                          },
                          "region": {
                            "startLine": 96
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"response.addCookie\" in line 96 of the file src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java, causing a Low risk Cookie Injection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "java-cookie-inj",
          "level": "warning",
          "message": {
            "text": "This application could be exposed to a Cookie Injection attack."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                },
                "region": {
                  "startLine": 93
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "executionOrder": 1,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                          },
                          "region": {
                            "startLine": 71
                          }
                        },
                        "message": {
                          "text": "Tainted input \"username\" was received in line 71 of the file src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 2,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                          },
                          "region": {
                            "startLine": 71
                          }
                        },
                        "message": {
                          "text": "the value is then passed on to the value of \"username\" in line 71 of the file src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java:"
                        }
                      }
                    },
                    {
                      "executionOrder": 3,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                          },
                          "region": {
                            "startLine": 84
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"username\" in line 84 of the file src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 4,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                          },
                          "region": {
                            "startLine": 85
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"lowerCasedUsername\" in line 85 of the file src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 5,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/encoders/EncDec.java"
                          },
                          "region": {
                            "startLine": 52
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"encoded\" in line 52 of the file src/main/java/org/owasp/webgoat/lessons/spoofcookie/encoders/EncDec.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 6,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/encoders/EncDec.java"
                          },
                          "region": {
                            "startLine": 70
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"value\" in line 70 of the file src/main/java/org/owasp/webgoat/lessons/spoofcookie/encoders/EncDec.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 7,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/encoders/EncDec.java"
                          },
                          "region": {
                            "startLine": 53
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"encoded\" in line 53 of the file src/main/java/org/owasp/webgoat/lessons/spoofcookie/encoders/EncDec.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 8,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/encoders/EncDec.java"
                          },
                          "region": {
                            "startLine": 76
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"encoded\" in line 76 of the file src/main/java/org/owasp/webgoat/lessons/spoofcookie/encoders/EncDec.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 9,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/encoders/EncDec.java"
                          },
                          "region": {
                            "startLine": 77
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"encoded\" in line 77 of the file src/main/java/org/owasp/webgoat/lessons/spoofcookie/encoders/EncDec.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 10,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/encoders/EncDec.java"
                          },
                          "region": {
                            "startLine": 54
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"encoded\" in line 54 of the file src/main/java/org/owasp/webgoat/lessons/spoofcookie/encoders/EncDec.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 11,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/encoders/EncDec.java"
                          },
                          "region": {
                            "startLine": 55
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"encoded\" in line 55 of the file src/main/java/org/owasp/webgoat/lessons/spoofcookie/encoders/EncDec.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 12,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                          },
                          "region": {
                            "startLine": 92
                          }
                        },
                        "message": {
                          "text": "which is further passed on to the value of \"newCookieValue\" in line 92 of the file src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                        }
                      }
                    },
                    {
                      "executionOrder": 13,
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                          },
                          "region": {
                            "startLine": 93
                          }
                        },
                        "message": {
                          "text": "and finally passed unsanitized into a sensitive sink function \"Cookie\" in line 93 of the file src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java, causing a Low risk Cookie Injection vulnerability:"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "tool": {
        "driver": {
          "informationUri": "https://www.mend.io/sast/",
          "name": "mend.sast.engineJS",
          "rules": [
            {
              "id": "js-cmd-inj",
              "name": "JsCommandInjection",
              "shortDescription": {
                "text": "Command Injection vulnerability (JavaScript / Node.js)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/78.html",
              "help": {
                "text": "Command Injection vulnerability occurs when an application passes unsafe data supplied by the user (forms, cookies, HTTP headers etc.) to a system shell. In this attack operating system commands supplied by the attacker are usually executed with the privileges of the vulnerable application. Successful shell command execution attack can result in arbitrary command execution and a full system compromise\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Blacklisting forbidden character sequences\n- Whitelisting allowed character sequences\n- Restricting permissions on operating system commands\n- Filtering out command directory names\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "js-sqli",
              "name": "JsSqlInjection",
              "shortDescription": {
                "text": "SQL Injection vulnerability (JavaScript / Node.js)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/89.html",
              "help": {
                "text": "SQL Injection vulnerability occurs when a user input is used in the construction of an SQL query without proper user input string neutralization (sanitization). A successful SQL injection exploit can read sensitive data from the database, modify database data (Insert/Update/Delete), execute administration operations on the database (such as shutdown of the DBMS), recover the content of a given file present on the DBMS file system or in some cases issue commands to the operating system\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Using prepared statements (with parameterized queries)\n- Correct filtering (escaping) of string literal escape characters in SQL statements, like single quote ('), double quote (\"), backslash (\\) and the NULL byte\n- Checking parameters for valid representation for the give type (integer, float or boolean)\n- Correct database permissions on logon, which restricts web application or user access to unnecessary data\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "js-code-inj",
              "name": "JsCodeInjection",
              "shortDescription": {
                "text": "Code Injection vulnerability (JavaScript / Node.js)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/94.html",
              "help": {
                "text": "The application constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment. When the application allows a user's input to contain code syntax, it might be possible for an attacker to craft the code in such a way that it will alter the intended control flow of the application. Such an alteration could lead to arbitrary code execution\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Rejecting any input that does not strictly conform to specifications, or transforming it into something that does\n- When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules\n- To reduce the likelihood of code injection, stringent whitelists that limit which constructs are allowed should be used. If the code that invokes a function is dynamically constructed, then verifying that the input is alphanumeric might be insufficient\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "js-path-traversal",
              "name": "JsPathDirectoryTraversal",
              "shortDescription": {
                "text": "Path/Directory Traversal vulnerability (JavaScript / Node.js)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/22.html",
              "help": {
                "text": "Path/Directory Traversal or file disclosure vulnerability occurs when an external input is used to construct a pathname that is intended to identify a file or a directory located underneath a restricted parent directory. The application does not properly neutralize (sanitize) special elements within the pathname, which can cause the pathname to resolve to a location that is outside of the restricted directory. Successful file disclosure attack can result in sensitive files disclosure, and can often lead to full system compromise\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Using a whitelist of directories from which files are allowed for download and validating requests based on that list\n- Indexing files which are allowed for download and passing only their index numbers as the URL parameter values\n- Validating requested file types\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "js-nosql-inj",
              "name": "JsNosqlInjection",
              "shortDescription": {
                "text": "NoSQL Injection vulnerability (JavaScript / Node.js)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/943.html",
              "help": {
                "text": "NoSQL injection vulnerabilities allow attackers to inject code into commands for databases that don’t use SQL queries, such as MongoDB\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "js-dom-xss",
              "name": "JsDomBasedCrossSiteScripting",
              "shortDescription": {
                "text": "DOM Based Cross-Site Scripting vulnerability (JavaScript / Node.js)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/79.html",
              "help": {
                "text": "Cross Site Scripting (XSS) vulnerability occurs when an application either does not perform or it performs incorrect neutralization (sanitization) of input data that is included in a web application response. As the result, an attacker is able to inject and execute arbitrary HTML and script code in a user's browser within the context of the vulnerable website. These attacks are often used to steal authentication credentials (e.g. session IDs in cookies). Depending on the vulnerability and the web application, it is also possible to completely alter the web page itself or control the victim's browser\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Escape HTML before inserting untrusted data into element content\n- Escape attribute before inserting untrusted data into HTML common attributes\n- Escape JavaScript before inserting untrusted data into JavaScript data values\n- Escape CSS and strictly validate before inserting untrusted data into HTML style property values\n- Escape URL before inserting untrusted data into HTML URL parameter values\n- Use HTML policy engine to validate or clean user-driven HTML in an outbound way\n- Use HTTPOnly cookie flag\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "js-xss",
              "name": "JsCrossSiteScripting",
              "shortDescription": {
                "text": "Cross-Site Scripting vulnerability (JavaScript / Node.js)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/79.html",
              "help": {
                "text": "Cross Site Scripting (XSS) vulnerability occurs when an application either does not perform or it performs incorrect neutralization (sanitization) of input data that is included in a web application response. As the result, an attacker is able to inject and execute arbitrary HTML and script code in a user's browser within the context of the vulnerable website. These attacks are often used to steal authentication credentials (e.g. session IDs in cookies). Depending on the vulnerability and the web application, it is also possible to completely alter the web page itself or control the victim's browser\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Escape HTML before inserting untrusted data into element content\n- Escape attribute before inserting untrusted data into HTML common attributes\n- Escape JavaScript before inserting untrusted data into JavaScript data values\n- Escape CSS and strictly validate before inserting untrusted data into HTML style property values\n- Escape URL before inserting untrusted data into HTML URL parameter values\n- Use HTML policy engine to validate or clean user-driven HTML in an outbound way\n- Use HTTPOnly cookie flag\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "js-hardcoded-creds",
              "name": "JsHardcodedPasswordCredentials",
              "shortDescription": {
                "text": "Hardcoded Password/Credentials vulnerability (JavaScript / Node.js)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/798.html",
              "help": {
                "text": "The application contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Store passwords, keys, and other credentials outside of the code in a strongly-protected, encrypted configuration file or database that is protected from access by all outsiders, including other local users on the same system. Properly protect the key. If you cannot use encryption to protect the file, then make sure that the permissions are as restrictive as possible\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "js-weak-rnd",
              "name": "JsWeakPseudoRandom",
              "shortDescription": {
                "text": "Weak Pseudo-Random vulnerability (JavaScript / Node.js)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/338.html",
              "help": {
                "text": "When a non-cryptographic PRNG is used in a cryptographic context, it can expose the cryptography to certain types of attacks. Often a pseudo-random number generator (PRNG) is not designed for cryptography. Sometimes a mediocre source of randomness is sufficient or preferable for algorithms that use random numbers. Weak generators generally take less processing power and/or do not use the precious, finite, entropy sources on a system. While such PRNGs might have very useful features, these same features could be used to break the cryptography\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Use functions or hardware which use a hardware-based random number generation for all crypto\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "js-misc",
              "name": "JsMiscellaneousDangerousFunctions",
              "shortDescription": {
                "text": "Miscellaneous Dangerous Functions vulnerability (JavaScript / Node.js)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/676.html",
              "help": {
                "text": "Miscellaneous dangerous functions are functions that could introduce a vulnerability of an unpredictable security impact if they are used incorrectly. Functions like LoadLibrary or printStackTrace could result in arbitrary code execution or information disclosure\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Avoid use of potentially dangerous or depreciated functions\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "js-regex-dos",
              "name": "JsRegexDenialOfServiceRedos",
              "shortDescription": {
                "text": "Regex Denial of Service (ReDoS) vulnerability (JavaScript / Node.js)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/400.html",
              "help": {
                "text": "Regular expression Denial of Service (ReDoS) is a Denial of Service attack, that exploits the fact that most Regular Expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). An attacker can then cause a program using a Regular Expression to enter these extreme situations and then hang for a very long time, affecting the availability of the application\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Do not pass untrusted user input to functions that perform regular expression searches\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "js-redirect",
              "name": "JsUnvalidatedOpenRedirect",
              "shortDescription": {
                "text": "Unvalidated/Open Redirect vulnerability (JavaScript / Node.js)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/601.html",
              "help": {
                "text": "Open Redirect vulnerability occurs when untrusted user input is passed to HTTP location redirect functions or properties. By modifying untrusted URL input to a malicious site, an attacker may successfully launch a phishing scam and steal user credentials. Because the server name in the modified link is identical to the original site, phishing attempts may have a more trustworthy appearance\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Do not pass untrusted user input to location redirection functions or properties\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "js-log-forge",
              "name": "JsLogForging",
              "shortDescription": {
                "text": "Log Forging vulnerability (JavaScript / Node.js)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/117.html",
              "help": {
                "text": "Log Forging vulnerability occurs when an application either does not neutralize (sanitize) or it incorrectly neutralizes output that is written to logs. This can allow an attacker to forge log entries or inject malicious content into log records\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Validating and encoding all input that could be outputed in the log file\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "js-header-inj",
              "name": "JsHttpHeaderInjection",
              "shortDescription": {
                "text": "HTTP Header Injection vulnerability (JavaScript / Node.js)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/113.html",
              "help": {
                "text": "HTTP header injection is a general class of web application security vulnerability which occurs when HTTP headers are dynamically generated based on user input. Header injection in HTTP responses can allow for HTTP response splitting, Session fixation via the Set-Cookie header, cross-site scripting (XSS), and malicious redirect attacks via the location header\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Do not pass untrusted user input to functions that affect response header content\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "js-resp-split",
              "name": "JsHttpResponseSplitting",
              "shortDescription": {
                "text": "HTTP Response Splitting vulnerability (JavaScript / Node.js)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/113.html",
              "help": {
                "text": "HTTP Response Splitting vulnerability occurs when a user input that contains CR (carriage return, also represented by %0d or \\r) and LF (line feed, also represented by %0a or \\n) characters is included in the web application HTTP response headers. The failure to remove CRs and LFs allows an attacker to set arbitrary headers, take control of the body, or break the response into two or more separate responses and allow for different types of attacks such as Cross Site Scripting, cross-user defacement, web cache poisoning and similar exploits\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Remove CRs and LFs (and all other hazardous characters) before embedding data into any HTTP response header, particularly when setting cookies and redirecting\n- Use a whitelist of acceptable inputs that strictly conform to specifications\n- When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "js-dangerous-func",
              "name": "JsUseOfInherentlyDangerousFunction",
              "shortDescription": {
                "text": "Use of Inherently Dangerous Function vulnerability (JavaScript / Node.js)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/242.html",
              "help": {
                "text": "The application calls a function that can never be guaranteed to work safely. Certain functions behave in dangerous ways regardless of how they are used. Functions in this category were often implemented without taking security concerns into account\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Ban the use of dangerous functions. Use their safe equivalent\n"
              },
              "properties": {
                "precision": "high"
              }
            },
            {
              "id": "js-cookie-inj",
              "name": "JsCookieInjection",
              "shortDescription": {
                "text": "Cookie Injection vulnerability (JavaScript / Node.js)"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/20.html",
              "help": {
                "text": "The application does not validate or incorrectly validates input that can affect the control flow or data flow of a program, or in this specific case application cookies. When the application does not validate input properly, an attacker is able to craft the input in a form that is not expected by the rest of the application. This will lead to parts of the system receiving unintended input, which may result in altered control flow, arbitrary control of a resource, or arbitrary code execution\n\n\u003cb\u003eRecommendations:\u003c/b\u003e\n- Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does\n"
              },
              "properties": {
                "precision": "high"
              }
            }
          ],
          "version": "22.12.1.3"
        }
      },
      "invocations": [
        {
          "executionSuccessful": true,
          "startTimeUtc": "2023-01-10T07:28:12.518Z"
        },
        {
          "endTimeUtc": "2023-01-10T07:28:53.928Z",
          "executionSuccessful": true
        }
      ],
      "results": []
    }
  ]
}